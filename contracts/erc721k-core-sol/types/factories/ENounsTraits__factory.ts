/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ENounsTraits, ENounsTraitsInterface } from "../ENounsTraits";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "streamEns",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "fetch",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405273c18360217d8f7ab5e7c516566761ea12ce7f9d72608052739c8ff314c9bc7f6e59a9d9225fb22946427edc0360a052734b10701bfd7bfedc47d50562b76b436fbb5bdb3b60c05234801561005857600080fd5b50604051610f28380380610f28833981016040819052610077916100f5565b610080336100a5565b600180546001600160a01b0319166001600160a01b0392909216919091179055610125565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010757600080fd5b81516001600160a01b038116811461011e57600080fd5b9392505050565b60805160a05160c051610dd4610154600039600061029d0152600061020d0152600061017d0152610dd46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007b578063f6559a6b1461008e575b600080fd5b6100596100ae565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100596100893660046108d4565b6100c2565b6100a161009c366004610967565b610140565b6040516100729190610a17565b6100b66103d9565b6100c06000610433565b565b6100ca6103d9565b6001600160a01b0381166101345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61013d81610433565b50565b60606000828060200190518101906101589190610a4a565b6040516370a0823160e01b81526001600160a01b0380831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e89190610a67565b6040516370a0823160e01b81526001600160a01b0384811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610254573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102789190610a67565b6040516370a0823160e01b81526001600160a01b0385811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610a67565b905061031384610483565b6103476040518060400160405280600a815260200169656e7342616c616e636560b01b815250610342866104a7565b6105a8565b6103786040518060400160405280600c81526020016b6e6f756e7342616c616e636560a01b815250610342866104a7565b6103ac6040518060400160405280600f81526020016e6c696c4e6f756e7342616c616e636560881b815250610342866104a7565b6040516020016103bf9493929190610a80565b604051602081830303815290604052945050505050919050565b6000546001600160a01b031633146100c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161012b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060600080610491846105d4565b9150915061049f8282610804565b949350505050565b6060816000036104ce5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156104f857806104e281610b05565b91506104f19050600a83610b34565b91506104d2565b60008167ffffffffffffffff811115610513576105136108f8565b6040519080825280601f01601f19166020018201604052801561053d576020820181803683370190505b5090505b841561049f57610552600183610b48565b915061055f600a86610b5f565b61056a906030610b73565b60f81b81838151811061057f5761057f610b8b565b60200101906001600160f81b031916908160001a9053506105a1600a86610b34565b9450610541565b606082826040516020016105bd929190610ba1565b604051602081830303815290604052905092915050565b6001546040516302ec2f6d60e11b81526001600160a01b038381166004830152606092839291169060009082906305d85eda90602401602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190610a67565b905060008167ffffffffffffffff811115610668576106686108f8565b60405190808252806020026020018201604052801561069b57816020015b60608152602001906001900390816106865790505b50905060008267ffffffffffffffff8111156106b9576106b96108f8565b6040519080825280602002602001820160405280156106ec57816020015b60608152602001906001900390816106d75790505b50604051631c13359160e11b81526001600160a01b0389811660048301529192506000918291908716906338266b2290602401600060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107649190810190610cff565b9150915060005b858110156107f45782818151811061078557610785610b8b565b602002602001015185828151811061079f5761079f610b8b565b60200260200101819052508181815181106107bc576107bc610b8b565b60200260200101518482815181106107d6576107d6610b8b565b602002602001018190525080806107ec90610b05565b91505061076b565b5092989197509095505050505050565b60408051602081019091526000808252606091905b84518110156108b757600084828151811061083657610836610b8b565b60200260200101515111156108a5578161088286838151811061085b5761085b610b8b565b602002602001015186848151811061087557610875610b8b565b60200260200101516105a8565b604051602001610893929190610d63565b60405160208183030381529060405291505b806108af81610b05565b915050610819565b509392505050565b6001600160a01b038116811461013d57600080fd5b6000602082840312156108e657600080fd5b81356108f1816108bf565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610937576109376108f8565b604052919050565b600067ffffffffffffffff821115610959576109596108f8565b50601f01601f191660200190565b60006020828403121561097957600080fd5b813567ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80356109b46109af8261093f565b61090e565b8181528560208385010111156109c957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610a025781810151838201526020016109ea565b83811115610a11576000848401525b50505050565b6020815260008251806020840152610a368160408501602087016109e7565b601f01601f19169190910160400192915050565b600060208284031215610a5c57600080fd5b81516108f1816108bf565b600060208284031215610a7957600080fd5b5051919050565b60008551610a92818460208a016109e7565b855190830190610aa6818360208a016109e7565b600b60fa1b91018181528551909190610ac6816001850160208a016109e7565b60019201918201528351610ae18160028401602088016109e7565b016002019695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b1757610b17610aef565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610b4357610b43610b1e565b500490565b600082821015610b5a57610b5a610aef565b500390565b600082610b6e57610b6e610b1e565b500690565b60008219821115610b8657610b86610aef565b500190565b634e487b7160e01b600052603260045260246000fd5b6e3d913a3930b4ba2fba3cb832911d1160891b81528251600090610bcc81600f8501602088016109e7565b61088b60f21b600f9184019182015267113b30b63ab2911d60c11b6011820152601160f91b60198201528351610c0981601a8401602088016109e7565b61227d60f01b601a9290910191820152601c01949350505050565b600082601f830112610c3557600080fd5b8151602067ffffffffffffffff80831115610c5257610c526108f8565b8260051b610c6183820161090e565b9384528581018301938381019088861115610c7b57600080fd5b84880192505b85831015610cf357825184811115610c995760008081fd5b8801603f81018a13610cab5760008081fd5b858101516040610cbd6109af8361093f565b8281528c82848601011115610cd25760008081fd5b610ce1838a83018487016109e7565b85525050509184019190840190610c81565b98975050505050505050565b60008060408385031215610d1257600080fd5b825167ffffffffffffffff80821115610d2a57600080fd5b610d3686838701610c24565b93506020850151915080821115610d4c57600080fd5b50610d5985828601610c24565b9150509250929050565b60008351610d758184602088016109e7565b835190830190610d898183602088016109e7565b600b60fa1b910190815260010194935050505056fea26469706673582212204ceea8111008929ce8d1976169926400a31af4d134336adb54b45422adc0433d64736f6c634300080f0033";

type ENounsTraitsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ENounsTraitsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ENounsTraits__factory extends ContractFactory {
  constructor(...args: ENounsTraitsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ENounsTraits";
  }

  deploy(
    streamEns: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ENounsTraits> {
    return super.deploy(streamEns, overrides || {}) as Promise<ENounsTraits>;
  }
  getDeployTransaction(
    streamEns: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(streamEns, overrides || {});
  }
  attach(address: string): ENounsTraits {
    return super.attach(address) as ENounsTraits;
  }
  connect(signer: Signer): ENounsTraits__factory {
    return super.connect(signer) as ENounsTraits__factory;
  }
  static readonly contractName: "ENounsTraits";
  public readonly contractName: "ENounsTraits";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ENounsTraitsInterface {
    return new utils.Interface(_abi) as ENounsTraitsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ENounsTraits {
    return new Contract(address, _abi, signerOrProvider) as ENounsTraits;
  }
}
