/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SVGLibrary, SVGLibraryInterface } from "../SVGLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_colors_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "package",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040527f5fd8cb24549624227a78453feaec1565b8d1f4626577a1d15c0719a34804b4606080527fe108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c60a0527f790ef67b6749ebf7a55a8aa23a6703c0074d4b3c0bfb6d059ed0e60eda56b19c60c05234801561007c57600080fd5b5060405161042338038061042383398101604081905261009b916100c0565b600080546001600160a01b0319166001600160a01b03929092169190911790556100f0565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b60805160a05160c05161030561011e60003960006101910152600061014a0152600060f201526103056000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e9ae5c5314610030575b600080fd5b61004361003e3660046101ee565b610059565b604051610050919061026a565b60405180910390f35b6000838152600160205260409020546060906001600160a01b0316156100f05760008481526001602052604080822054905182916001600160a01b0316906100a490879087906102bf565b600060405180830381855afa9150503d80600081146100df576040519150601f19603f3d011682016040523d82523d6000602084013e6100e4565b606091505b5093506101e792505050565b7f000000000000000000000000000000000000000000000000000000000000000084036101485760008073__$c6f2003f7d3b61116c8cd05afb053ad2db$__6001600160a01b031685856040516100a49291906102bf565b7f0000000000000000000000000000000000000000000000000000000000000000840361018f576000805460405182916001600160a01b0316906100a490879087906102bf565b7f000000000000000000000000000000000000000000000000000000000000000084036101e75760008073__$6682988cdc32c33d1c5aaf5f735b12c37e$__6001600160a01b031685856040516100a49291906102bf565b9392505050565b60008060006040848603121561020357600080fd5b83359250602084013567ffffffffffffffff8082111561022257600080fd5b818601915086601f83011261023657600080fd5b81358181111561024557600080fd5b87602082850101111561025757600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156102975785810183015185820160400152820161027b565b818111156102a9576000604083870101525b50601f01601f1916929092016040019392505050565b818382376000910190815291905056fea26469706673582212202da3802d7cded6831b42aa5b2eb4878b172ad65a840dabd45ef4709e397b9c9664736f6c634300080f0033";

type SVGLibraryConstructorParams =
  | [linkLibraryAddresses: SVGLibraryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SVGLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SVGLibrary__factory extends ContractFactory {
  constructor(...args: SVGLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SVGLibrary__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "SVGLibrary";
  }

  static linkBytecode(
    linkLibraryAddresses: SVGLibraryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c6f2003f7d3b61116c8cd05afb053ad2db\\$__", "g"),
      linkLibraryAddresses["@erc721k/periphery-sol/contracts/svg/svg.sol:svg"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6682988cdc32c33d1c5aaf5f735b12c37e\\$__", "g"),
      linkLibraryAddresses[
        "@erc721k/periphery-sol/contracts/svg/svgUtils.sol:svgUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _colors_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SVGLibrary> {
    return super.deploy(_colors_, overrides || {}) as Promise<SVGLibrary>;
  }
  getDeployTransaction(
    _colors_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_colors_, overrides || {});
  }
  attach(address: string): SVGLibrary {
    return super.attach(address) as SVGLibrary;
  }
  connect(signer: Signer): SVGLibrary__factory {
    return super.connect(signer) as SVGLibrary__factory;
  }
  static readonly contractName: "SVGLibrary";
  public readonly contractName: "SVGLibrary";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SVGLibraryInterface {
    return new utils.Interface(_abi) as SVGLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SVGLibrary {
    return new Contract(address, _abi, signerOrProvider) as SVGLibrary;
  }
}

export interface SVGLibraryLibraryAddresses {
  ["@erc721k/periphery-sol/contracts/svg/svg.sol:svg"]: string;
  ["@erc721k/periphery-sol/contracts/svg/svgUtils.sol:svgUtils"]: string;
}
