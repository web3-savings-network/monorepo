/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FixedPointMathLib,
  FixedPointMathLibInterface,
} from "../FixedPointMathLib";

const _abi = [
  {
    inputs: [],
    name: "DivFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "DivWadFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "FactorialOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "LnWadUndefined",
    type: "error",
  },
  {
    inputs: [],
    name: "Log2Undefined",
    type: "error",
  },
  {
    inputs: [],
    name: "MulDivFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MulWadFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "factorial",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61015e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063837148341461003a575b600080fd5b61004d61004836600461010f565b61005f565b60405190815260200160405180910390f35b6000600b82101561009a5750623fffff7e0375f0016260009d80004ec0002d00001e0000180000180000200000400001601683021c16919050565b60208210156100c2575062375f005b60001982019190810290600a036001016100a957919050565b603a8210156100f657506e01956ad0aae33a4560c5cd2c0000005b60001982019190810290601f036001016100dd57919050565b6040516355d0795160e11b815260040160405180910390fd5b60006020828403121561012157600080fd5b503591905056fea26469706673582212209948fee52dece56138ff56160c1ba6c880ae6d105b9e964a17a94498f24ff4fe64736f6c634300080f0033";

type FixedPointMathLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FixedPointMathLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FixedPointMathLib__factory extends ContractFactory {
  constructor(...args: FixedPointMathLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FixedPointMathLib";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FixedPointMathLib> {
    return super.deploy(overrides || {}) as Promise<FixedPointMathLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FixedPointMathLib {
    return super.attach(address) as FixedPointMathLib;
  }
  connect(signer: Signer): FixedPointMathLib__factory {
    return super.connect(signer) as FixedPointMathLib__factory;
  }
  static readonly contractName: "FixedPointMathLib";
  public readonly contractName: "FixedPointMathLib";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedPointMathLibInterface {
    return new utils.Interface(_abi) as FixedPointMathLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FixedPointMathLib {
    return new Contract(address, _abi, signerOrProvider) as FixedPointMathLib;
  }
}
