/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ENounders, ENoundersInterface } from "../ENounders";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        internalType: "struct ENounders.ContractURI",
        name: "contractURI",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        internalType: "struct ENounders.ContractURI",
        name: "contractURI",
        type: "tuple",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
    ],
    name: "setImageURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022b9380380620022b98339810160408190526200003491620003f1565b8484600062000044838262000641565b50600162000053828262000641565b505050620000706200006a6200012460201b60201c565b62000128565b82518390600890819062000085908262000641565b50602082015160018201906200009c908262000641565b5060408201516002820190620000b3908262000641565b5060608201516003820190620000ca908262000641565b5060808201516004820190620000e1908262000641565b5060a08201516005820190620000f8908262000641565b50600791506200010b9050838262000641565b50620001198160016200017a565b505050505062000734565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001d65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064015b60405180910390fd5b6000818152600260205260409020546001600160a01b0316156200023d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620001cd565b6001600160a01b0382166000908152600360205260408120805460019290620002689084906200070d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715620003065762000306620002cb565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003375762000337620002cb565b604052919050565b600082601f8301126200035157600080fd5b81516001600160401b038111156200036d576200036d620002cb565b602062000383601f8301601f191682016200030c565b82815285828487010111156200039857600080fd5b60005b83811015620003b85785810183015182820184015282016200039b565b83811115620003ca5760008385840101525b5095945050505050565b80516001600160a01b0381168114620003ec57600080fd5b919050565b600080600080600060a086880312156200040a57600080fd5b85516001600160401b03808211156200042257600080fd5b6200043089838a016200033f565b965060208801519150808211156200044757600080fd5b6200045589838a016200033f565b955060408801519150808211156200046c57600080fd5b9087019060c0828a0312156200048157600080fd5b6200048b620002e1565b8251828111156200049b57600080fd5b620004a98b8286016200033f565b825250602083015182811115620004bf57600080fd5b620004cd8b8286016200033f565b602083015250604083015182811115620004e657600080fd5b620004f48b8286016200033f565b6040830152506060830151828111156200050d57600080fd5b6200051b8b8286016200033f565b6060830152506080830151828111156200053457600080fd5b620005428b8286016200033f565b60808301525060a0830151828111156200055b57600080fd5b620005698b8286016200033f565b60a08301525060608901519095509150808211156200058757600080fd5b5062000596888289016200033f565b925050620005a760808701620003d4565b90509295509295909350565b600181811c90821680620005c857607f821691505b602082108103620005e957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c657600081815260208120601f850160051c81016020861015620006185750805b601f850160051c820191505b81811015620006395782815560010162000624565b505050505050565b81516001600160401b038111156200065d576200065d620002cb565b62000675816200066e8454620005b3565b84620005ef565b602080601f831160018114620006ad5760008415620006945750858301515b600019600386901b1c1916600185901b17855562000639565b600085815260208120601f198616915b82811015620006de57888601518255948401946001909101908401620006bd565b5085821015620006fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200072f57634e487b7160e01b600052601160045260246000fd5b500190565b611b7580620007446000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063b88d4fde11610071578063b88d4fde1461026a578063c87b56dd1461027d578063e8a3d48514610290578063e985e9c514610298578063f2fde38b146102d457600080fd5b8063715018a61461022e57806386d1a69f146102365780638da5cb5b1461023e57806395d89b411461024f578063a22cb4651461025757600080fd5b806323b872dd116100f457806323b872dd146101c157806342842e0e146101d457806357e30f44146101e75780636352211e146101fa57806370a082311461020d57600080fd5b806301ffc9a71461013157806304787ca21461015957806306fdde031461016e578063081812fc14610183578063095ea7b3146101ae575b600080fd5b61014461013f366004610fd4565b6102e7565b60405190151581526020015b60405180910390f35b61016c6101673660046110cd565b610339565b005b610176610349565b604051610150919061115a565b61019661019136600461116d565b6103db565b6040516001600160a01b039091168152602001610150565b61016c6101bc3660046111a2565b610402565b61016c6101cf3660046111cc565b61051c565b61016c6101e23660046111cc565b61054d565b61016c6101f5366004611208565b610568565b61019661020836600461116d565b6105ea565b61022061021b366004611329565b61064a565b604051908152602001610150565b61016c6106d0565b61016c6106e4565b6006546001600160a01b0316610196565b6101766106ef565b61016c610265366004611344565b6106fe565b61016c610278366004611380565b610709565b61017661028b36600461116d565b61073b565b6101766107d2565b6101446102a63660046113fc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61016c6102e2366004611329565b61081e565b60006001600160e01b031982166380ac58cd60e01b148061031857506001600160e01b03198216635b5e139f60e01b145b8061033357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600761034582826114b7565b5050565b6060600080546103589061142f565b80601f01602080910402602001604051908101604052809291908181526020018280546103849061142f565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b60006103e682610897565b506000908152600460205260409020546001600160a01b031690565b600061040d826105ea565b9050806001600160a01b0316836001600160a01b03160361047f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061049b575061049b81336102a6565b61050d5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610476565b61051783836108f6565b505050565b6105263382610964565b6105425760405162461bcd60e51b815260040161047690611577565b6105178383836109e3565b61051783838360405180602001604052806000815250610709565b80518190600890819061057b90826114b7565b506020820151600182019061059090826114b7565b50604082015160028201906105a590826114b7565b50606082015160038201906105ba90826114b7565b50608082015160048201906105cf90826114b7565b5060a082015160058201906105e490826114b7565b50505050565b6000818152600260205260408120546001600160a01b0316806103335760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b60006001600160a01b0382166106b45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610476565b506001600160a01b031660009081526003602052604090205490565b6106d8610b7f565b6106e26000610bd9565b565b6106ec610b7f565b33ff5b6060600180546103589061142f565b610345338383610c2b565b6107133383610964565b61072f5760405162461bcd60e51b815260040161047690611577565b6105e484848484610cf9565b60606107ac6007610787604051806040016040528060078152602001660dcdeeadcd2e6d60cb1b815250604051806040016040528060048152602001637472756560e01b815250610d2c565b604051602001610798929190611654565b604051602081830303815290604052610d58565b6040516020016107bc919061179b565b6040516020818303038152906040529050919050565b6040516060906107fa9061079890600890600990600a90600b90600c90600d906020016117e0565b60405160200161080a919061179b565b604051602081830303815290604052905090565b610826610b7f565b6001600160a01b03811661088b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610476565b61089481610bd9565b50565b6000818152600260205260409020546001600160a01b03166108945760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061092b826105ea565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610970836105ea565b9050806001600160a01b0316846001600160a01b031614806109b757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109db5750836001600160a01b03166109d0846103db565b6001600160a01b0316145b949350505050565b826001600160a01b03166109f6826105ea565b6001600160a01b031614610a5a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610476565b6001600160a01b038216610abc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610476565b610ac76000826108f6565b6001600160a01b0383166000908152600360205260408120805460019290610af0908490611960565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b1e908490611977565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146106e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610476565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610c8c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610476565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d048484846109e3565b610d1084848484610ebd565b6105e45760405162461bcd60e51b81526004016104769061198f565b60608282604051602001610d419291906119e1565b604051602081830303815290604052905092915050565b60608151600003610d7757505060408051602081019091526000815290565b6000604051806060016040528060408152602001611b006040913990506000600384516002610da69190611977565b610db09190611a64565b610dbb906004611a86565b90506000610dca826020611977565b67ffffffffffffffff811115610de257610de2610ff8565b6040519080825280601f01601f191660200182016040528015610e0c576020820181803683370190505b509050818152600183018586518101602084015b81831015610e78576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610e20565b600389510660018114610e925760028114610ea357610eaf565b613d3d60f01b600119830152610eaf565b603d60f81b6000198301525b509398975050505050505050565b60006001600160a01b0384163b15610fb357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f01903390899088908890600401611aa5565b6020604051808303816000875af1925050508015610f3c575060408051601f3d908101601f19168201909252610f3991810190611ae2565b60015b610f99573d808015610f6a576040519150601f19603f3d011682016040523d82523d6000602084013e610f6f565b606091505b508051600003610f915760405162461bcd60e51b81526004016104769061198f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109db565b506001949350505050565b6001600160e01b03198116811461089457600080fd5b600060208284031215610fe657600080fd5b8135610ff181610fbe565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561103157611031610ff8565b60405290565b600067ffffffffffffffff8084111561105257611052610ff8565b604051601f8501601f19908116603f0116810190828211818310171561107a5761107a610ff8565b8160405280935085815286868601111561109357600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126110be57600080fd5b610ff183833560208501611037565b6000602082840312156110df57600080fd5b813567ffffffffffffffff8111156110f657600080fd5b6109db848285016110ad565b60005b8381101561111d578181015183820152602001611105565b838111156105e45750506000910152565b60008151808452611146816020860160208601611102565b601f01601f19169290920160200192915050565b602081526000610ff1602083018461112e565b60006020828403121561117f57600080fd5b5035919050565b80356001600160a01b038116811461119d57600080fd5b919050565b600080604083850312156111b557600080fd5b6111be83611186565b946020939093013593505050565b6000806000606084860312156111e157600080fd5b6111ea84611186565b92506111f860208501611186565b9150604084013590509250925092565b60006020828403121561121a57600080fd5b813567ffffffffffffffff8082111561123257600080fd5b9083019060c0828603121561124657600080fd5b61124e61100e565b82358281111561125d57600080fd5b611269878286016110ad565b82525060208301358281111561127e57600080fd5b61128a878286016110ad565b6020830152506040830135828111156112a257600080fd5b6112ae878286016110ad565b6040830152506060830135828111156112c657600080fd5b6112d2878286016110ad565b6060830152506080830135828111156112ea57600080fd5b6112f6878286016110ad565b60808301525060a08301358281111561130e57600080fd5b61131a878286016110ad565b60a08301525095945050505050565b60006020828403121561133b57600080fd5b610ff182611186565b6000806040838503121561135757600080fd5b61136083611186565b91506020830135801515811461137557600080fd5b809150509250929050565b6000806000806080858703121561139657600080fd5b61139f85611186565b93506113ad60208601611186565b925060408501359150606085013567ffffffffffffffff8111156113d057600080fd5b8501601f810187136113e157600080fd5b6113f087823560208401611037565b91505092959194509250565b6000806040838503121561140f57600080fd5b61141883611186565b915061142660208401611186565b90509250929050565b600181811c9082168061144357607f821691505b60208210810361146357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561051757600081815260208120601f850160051c810160208610156114905750805b601f850160051c820191505b818110156114af5782815560010161149c565b505050505050565b815167ffffffffffffffff8111156114d1576114d1610ff8565b6114e5816114df845461142f565b84611469565b602080601f83116001811461151a57600084156115025750858301515b600019600386901b1c1916600185901b1785556114af565b600085815260208120601f198616915b828110156115495788860151825594840194600190910190840161152a565b50858210156115675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600081546115d28161142f565b600182811680156115ea57600181146115ff5761162e565b60ff198416875282151583028701945061162e565b8560005260208060002060005b858110156116255781548a82015290840190820161160c565b50505082870194505b5050505092915050565b6000815161164a818560208601611102565b9290920192915050565b673d913730b6b2911d60c11b8152601160f91b60088201527f466f756e64696e6720654e6f756e657273202d20546865204561726c79204e6f600982015265756e6465727360d01b602982015261088b60f21b602f8201526d113232b9b1b934b83a34b7b7111d60911b6031820152601160f91b603f8201527f4c696d697465642045646974696f6e20312f3120636f6d6d656d6f726174697660408201527f6520636f6c6c65637461626c65206f66206561726c7920654e6f756e64657273606082015260006080820161088b60f21b8152671134b6b0b3b2911d60c11b6002820152601160f91b600a82015261174f600b8201866115c5565b61088b60f21b815290506e2261747472696275746573223a205b60881b600282015261177e6011820185611638565b605d60f81b8152607d60f81b600182015260020195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516117d381601d850160208701611102565b91909101601d0192915050565b673d913730b6b2911d60c11b8152601160f91b6008820152600061180760098301896115c5565b61088b60f21b8152600261182d8183016d113232b9b1b934b83a34b7b7111d60911b9052565b601160f91b6010830152611844601183018a6115c5565b61088b60f21b81529150671134b6b0b3b2911d60c11b82820152601160f91b600a830152611875600b8301896115c5565b61088b60f21b815291506e1132bc3a32b93730b62634b735911d60891b82820152601160f91b60118301526118ad60128301886115c5565b61088b60f21b815291507f2273656c6c65724665654261736973506f696e7473223a00000000000000000082820152601160f91b60198301526118f3601a8301876115c5565b61088b60f21b815291506e113332b2a932b1b4b834b2b73a111d60891b82820152601160f91b601183015261192b60128301866115c5565b601160f91b8152607d60f81b6001820152019998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156119725761197261194a565b500390565b6000821982111561198a5761198a61194a565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6e3d913a3930b4ba2fba3cb832911d1160891b81528251600090611a0c81600f850160208801611102565b61088b60f21b600f9184019182015267113b30b63ab2911d60c11b6011820152601160f91b60198201528351611a4981601a840160208801611102565b61227d60f01b601a9290910191820152601c01949350505050565b600082611a8157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611aa057611aa061194a565b500290565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ad89083018461112e565b9695505050505050565b600060208284031215611af457600080fd5b8151610ff181610fbe56fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122023b3b0bc8d157bdab95a4c14944e88c7263f16876d9918cb416206f52ef4947064736f6c634300080f0033";

type ENoundersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ENoundersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ENounders__factory extends ContractFactory {
  constructor(...args: ENoundersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ENounders";
  }

  deploy(
    name: string,
    symbol: string,
    contractURI: ENounders.ContractURIStruct,
    imageURI: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ENounders> {
    return super.deploy(
      name,
      symbol,
      contractURI,
      imageURI,
      _owner,
      overrides || {}
    ) as Promise<ENounders>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    contractURI: ENounders.ContractURIStruct,
    imageURI: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      contractURI,
      imageURI,
      _owner,
      overrides || {}
    );
  }
  attach(address: string): ENounders {
    return super.attach(address) as ENounders;
  }
  connect(signer: Signer): ENounders__factory {
    return super.connect(signer) as ENounders__factory;
  }
  static readonly contractName: "ENounders";
  public readonly contractName: "ENounders";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ENoundersInterface {
    return new utils.Interface(_abi) as ENoundersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ENounders {
    return new Contract(address, _abi, signerOrProvider) as ENounders;
  }
}
