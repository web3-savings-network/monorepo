/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b815250601282600090816100659190610120565b5060016100728382610120565b5060ff16608052506101df9050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100ab57607f821691505b6020821081036100cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011b57600081815260208120601f850160051c810160208610156100f85750805b601f850160051c820191505b8181101561011757828155600101610104565b5050505b505050565b81516001600160401b0381111561013957610139610081565b61014d816101478454610097565b846100d1565b602080601f831160018114610182576000841561016a5750858301515b600019600386901b1c1916600185901b178555610117565b600085815260208120601f198616915b828110156101b157888601518255948401946001909101908401610192565b50858210156101cf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161082b6101fa6000396000610185015261082b6000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461017357806370a08231146101b957806395d89b41146101e6578063a9059cbb146101fb578063d0e30db01461021b578063dd62ed3e1461022357600080fd5b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461010f57806323b872dd146101335780632e1a7d4d1461015357600080fd5b366100af576100ad61025b565b005b600080fd5b3480156100c057600080fd5b506100c961029c565b6040516100d69190610611565b60405180910390f35b3480156100eb57600080fd5b506100ff6100fa366004610682565b61032a565b60405190151581526020016100d6565b34801561011b57600080fd5b5061012560025481565b6040519081526020016100d6565b34801561013f57600080fd5b506100ff61014e3660046106ac565b610396565b34801561015f57600080fd5b506100ad61016e3660046106e8565b610476565b34801561017f57600080fd5b506101a77f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100d6565b3480156101c557600080fd5b506101256101d4366004610701565b60036020526000908152604090205481565b3480156101f257600080fd5b506100c96104c2565b34801561020757600080fd5b506100ff610216366004610682565b6104cf565b6100ad61025b565b34801561022f57600080fd5b5061012561023e366004610723565b600460209081526000928352604080842090915290825290205481565b6102653334610535565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102a990610756565b80601f01602080910402602001604051908101604052809291908181526020018280546102d590610756565b80156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103859086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103f2576103cd83826107a6565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061041a9084906107a6565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206107d6833981519152906104639087815260200190565b60405180910390a3506001949350505050565b610480338261058f565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a26104bf33826105f1565b50565b600180546102a990610756565b336000908152600360205260408120805483919083906104f09084906107a6565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206107d6833981519152906103859086815260200190565b806002600082825461054791906107bd565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206107d683398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906105b79084906107a6565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206107d683398151915290602001610583565b60008060008084865af161060d5763b12d13eb6000526004601cfd5b5050565b600060208083528351808285015260005b8181101561063e57858101830151858201604001528201610622565b81811115610650576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461067d57600080fd5b919050565b6000806040838503121561069557600080fd5b61069e83610666565b946020939093013593505050565b6000806000606084860312156106c157600080fd5b6106ca84610666565b92506106d860208501610666565b9150604084013590509250925092565b6000602082840312156106fa57600080fd5b5035919050565b60006020828403121561071357600080fd5b61071c82610666565b9392505050565b6000806040838503121561073657600080fd5b61073f83610666565b915061074d60208401610666565b90509250929050565b600181811c9082168061076a57607f821691505b60208210810361078a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107b8576107b8610790565b500390565b600082198211156107d0576107d0610790565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122076029e24d95b923089bcfce47387c48ca7fad4c7586aa5484d462a05f898c4f564736f6c634300080f0033";

type WETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WETH";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly contractName: "WETH";
  public readonly contractName: "WETH";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
