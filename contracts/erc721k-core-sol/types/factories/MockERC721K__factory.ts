/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721K, MockERC721KInterface } from "../MockERC721K";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsafeRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongFrom",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "ERC721StorageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerCandidate",
        type: "address",
      },
    ],
    name: "OwnerUpdateInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getERC721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014943803806200149483398101604081905262000034916200019f565b8282823383836000620000488382620002bb565b506001620000578282620002bb565b5050600680546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600980546001600160a01b0319166001600160a01b039290921691909117905550620003879350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fa57600080fd5b81516001600160401b0380821115620001175762000117620000d2565b604051601f8301601f19908116603f01168101908282118183101715620001425762000142620000d2565b816040528381526020925086838588010111156200015f57600080fd5b600091505b8382101562000183578582018301518183018401529082019062000164565b83821115620001955760008385830101525b9695505050505050565b600080600060608486031215620001b557600080fd5b83516001600160401b0380821115620001cd57600080fd5b620001db87838801620000e8565b94506020860151915080821115620001f257600080fd5b506200020186828701620000e8565b604086015190935090506001600160a01b03811681146200022157600080fd5b809150509250925092565b600181811c908216806200024157607f821691505b6020821081036200026257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b657600081815260208120601f850160051c81016020861015620002915750805b601f850160051c820191505b81811015620002b2578281556001016200029d565b5050505b505050565b81516001600160401b03811115620002d757620002d7620000d2565b620002ef81620002e884546200022c565b8462000268565b602080601f8311600181146200032757600084156200030e5750858301515b600019600386901b1c1916600185901b178555620002b2565b600085815260208120601f198616915b82811015620003585788860151825594840194600190910190840162000337565b5085821015620003775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6110fd80620003976000396000f3fe60806040526004361061012a5760003560e01c806387a89ee6116100ab578063b88d4fde1161006f578063b88d4fde14610330578063bd9b6d8614610350578063c87b56dd14610358578063e8a3d48514610378578063e985e9c51461038d578063f2fde38b146103c857600080fd5b806387a89ee61461029d5780638da5cb5b146102bb5780639137c1a7146102db57806395d89b41146102fb578063a22cb4651461031057600080fd5b806323b872dd116100f257806323b872dd1461021557806328c23a451461023557806342842e0e1461023d5780636352211e1461025d57806370a082311461027d57600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101d457806318160ddd146101f6575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610cd6565b6103db565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b506101796103ec565b60405161015b9190610d56565b34801561019257600080fd5b506101bc6101a1366004610d69565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101e057600080fd5b506101f46101ef366004610d99565b61047a565b005b34801561020257600080fd5b506008545b60405190815260200161015b565b34801561022157600080fd5b506101f4610230366004610dc3565b610540565b6101f46106ae565b34801561024957600080fd5b506101f4610258366004610dc3565b610717565b34801561026957600080fd5b506101bc610278366004610d69565b6107ea565b34801561028957600080fd5b50610207610298366004610dff565b610825565b3480156102a957600080fd5b506009546001600160a01b03166101bc565b3480156102c757600080fd5b506006546101bc906001600160a01b031681565b3480156102e757600080fd5b506101f46102f6366004610dff565b61086a565b34801561030757600080fd5b506101796108e8565b34801561031c57600080fd5b506101f461032b366004610e1a565b6108f5565b34801561033c57600080fd5b506101f461034b366004610e56565b610961565b6101f4610a24565b34801561036457600080fd5b50610179610373366004610d69565b610afc565b34801561038457600080fd5b50610179610b82565b34801561039957600080fd5b5061014f6103a8366004610ef1565b600560209081526000928352604080842090915290825290205460ff1681565b6101f46103d6366004610dff565b610bf9565b60006103e682610c6f565b92915050565b600080546103f990610f24565b80601f016020809104026020016040519081016040528092919081815260200182805461042590610f24565b80156104725780601f1061044757610100808354040283529160200191610472565b820191906000526020600020905b81548152906001019060200180831161045557829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148015906104c657506001600160a01b038116600090815260056020908152604080832033845290915290205460ff16155b156104e45760405163fe822d7b60e01b815260040160405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b0384811691161461057a5760405163c6de3f2560e01b815260040160405180910390fd5b6001600160a01b0382166105a157604051634e46966960e11b815260040160405180910390fd5b336001600160a01b038416148015906105de57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff16155b801561060157506000818152600460205260409020546001600160a01b03163314155b1561061f5760405163fe822d7b60e01b815260040160405180910390fd5b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146106d8576040516282b42960e81b815260040160405180910390fd5b600680546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b610722838383610540565b6001600160a01b0382163b156107e557604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610f5e565b6001600160e01b031916146107e557604051633da6393160e01b815260040160405180910390fd5b505050565b6000818152600260205260409020546001600160a01b03168061082057604051634d5e5fb360e01b815260040160405180910390fd5b919050565b60006001600160a01b03821661084e5760405163d92e233d60e01b815260040160405180910390fd5b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610894576040516282b42960e81b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527fd833c7cea3bce2562e201bf7e85016d0bc1173580c719f63378cc5d0457552b69060200160405180910390a150565b600180546103f990610f24565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61096c858585610540565b6001600160a01b0384163b15610a1d57604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906109b29033908a90899089908990600401610f7b565b6020604051808303816000875af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190610f5e565b6001600160e01b03191614610a1d57604051633da6393160e01b815260040160405180910390fd5b5050505050565b600754600160a01b900460ff1615610abd576006546001600160a01b03163314610a60576040516282b42960e81b815260040160405180910390fd5b6007805460ff60a01b198116909155600680546001600160a01b0319166001600160a01b039092169182179055604051819033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6007546001600160a01b03163314610ae7576040516282b42960e81b815260040160405180910390fd5b6007805460ff60a01b1916600160a01b179055565b600954604051637833cb0b60e11b8152606091829182916001600160a01b03169063f067961690610b3590879085908190600401610fcf565b600060405180830381865afa158015610b52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7a919081019061101a565b949350505050565b60095460408051631c97e82760e21b815290516060926001600160a01b03169163725fa09c9160048083019260009291908290030181865afa158015610bcc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bf4919081019061101a565b905090565b6006546001600160a01b03163314610c23576040516282b42960e81b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b03831690811790915560405133907f365e8eca24e61548e99db9d948e4f9cf79224bcbf4fc81afe651e6e80921c87590600090a350565b60006301ffc9a760e01b6001600160e01b031983161480610ca057506380ac58cd60e01b6001600160e01b03198316145b806103e65750506001600160e01b031916635b5e139f60e01b1490565b6001600160e01b031981168114610cd357600080fd5b50565b600060208284031215610ce857600080fd5b8135610cf381610cbd565b9392505050565b60005b83811015610d15578181015183820152602001610cfd565b83811115610d24576000848401525b50505050565b60008151808452610d42816020860160208601610cfa565b601f01601f19169290920160200192915050565b602081526000610cf36020830184610d2a565b600060208284031215610d7b57600080fd5b5035919050565b80356001600160a01b038116811461082057600080fd5b60008060408385031215610dac57600080fd5b610db583610d82565b946020939093013593505050565b600080600060608486031215610dd857600080fd5b610de184610d82565b9250610def60208501610d82565b9150604084013590509250925092565b600060208284031215610e1157600080fd5b610cf382610d82565b60008060408385031215610e2d57600080fd5b610e3683610d82565b915060208301358015158114610e4b57600080fd5b809150509250929050565b600080600080600060808688031215610e6e57600080fd5b610e7786610d82565b9450610e8560208701610d82565b935060408601359250606086013567ffffffffffffffff80821115610ea957600080fd5b818801915088601f830112610ebd57600080fd5b813581811115610ecc57600080fd5b896020828501011115610ede57600080fd5b9699959850939650602001949392505050565b60008060408385031215610f0457600080fd5b610f0d83610d82565b9150610f1b60208401610d82565b90509250929050565b600181811c90821680610f3857607f821691505b602082108103610f5857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610f7057600080fd5b8151610cf381610cbd565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b838152606060208201526000610fe86060830185610d2a565b8281036040840152610ffa8185610d2a565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561102c57600080fd5b815167ffffffffffffffff8082111561104457600080fd5b818401915084601f83011261105857600080fd5b81518181111561106a5761106a611004565b604051601f8201601f19908116603f0116810190838211818310171561109257611092611004565b816040528281528760208487010111156110ab57600080fd5b6110bc836020830160208801610cfa565b97965050505050505056fea26469706673582212205d01e7d64fd6b0a73b57ed593ac34fd0e2398a05d5594fadc97fbcc909317f2164736f6c634300080f0033";

type MockERC721KConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721KConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721K__factory extends ContractFactory {
  constructor(...args: MockERC721KConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockERC721K";
  }

  deploy(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721K> {
    return super.deploy(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    ) as Promise<MockERC721K>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    );
  }
  attach(address: string): MockERC721K {
    return super.attach(address) as MockERC721K;
  }
  connect(signer: Signer): MockERC721K__factory {
    return super.connect(signer) as MockERC721K__factory;
  }
  static readonly contractName: "MockERC721K";
  public readonly contractName: "MockERC721K";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721KInterface {
    return new utils.Interface(_abi) as MockERC721KInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721K {
    return new Contract(address, _abi, signerOrProvider) as MockERC721K;
  }
}
