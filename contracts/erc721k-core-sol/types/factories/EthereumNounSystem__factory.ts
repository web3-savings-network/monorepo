/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EthereumNounSystem,
  EthereumNounSystemInterface,
} from "../EthereumNounSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "_erc721Storage_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "NounCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getERC721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "preview",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "previewUsingName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRecords",
    outputs: [
      {
        internalType: "contract IENSReverseRecords",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "uint48",
        name: "background",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "body",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "accessory",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "head",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "glasses",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260098054730cfdb3ba1694c2bb2cfacb0339ad7b1ae5932b636001600160a01b031991821617909155600a8054733671ae578e63fdf66ad4f3e12cc0c0d71ac7510c9216821790556080523480156200005c57600080fd5b5060405162002701380380620027018339810160408190526200007f916200020d565b8282828282600062000092838262000329565b506001620000a1828262000329565b505050620000be620000b8620000ea60201b60201c565b620000ee565b600880546001600160a01b0319166001600160a01b039290921691909117905550620003f59350505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016857600080fd5b81516001600160401b038082111562000185576200018562000140565b604051601f8301601f19908116603f01168101908282118183101715620001b057620001b062000140565b81604052838152602092508683858801011115620001cd57600080fd5b600091505b83821015620001f15785820183015181830184015290820190620001d2565b83821115620002035760008385830101525b9695505050505050565b6000806000606084860312156200022357600080fd5b83516001600160401b03808211156200023b57600080fd5b620002498783880162000156565b945060208601519150808211156200026057600080fd5b506200026f8682870162000156565b604086015190935090506001600160a01b03811681146200028f57600080fd5b809150509250925092565b600181811c90821680620002af57607f821691505b602082108103620002d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032457600081815260208120601f850160051c81016020861015620002ff5750805b601f850160051c820191505b8181101562000320578281556001016200030b565b5050505b505050565b81516001600160401b0381111562000345576200034562000140565b6200035d816200035684546200029a565b84620002d6565b602080601f8311600181146200039557600084156200037c5750858301515b600019600386901b1c1916600185901b17855562000320565b600085815260208120601f198616915b82811015620003c657888601518255948401946001909101908401620003a5565b5085821015620003e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516122f062000411600039600061149201526122f06000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102be578063c87b56dd146102d1578063e8a3d485146102e4578063e985e9c5146102ec578063f0503e8014610328578063f2fde38b146103b657600080fd5b8063715018a61461026657806387a89ee61461026e5780638da5cb5b1461027f5780639137c1a71461029057806395d89b41146102a3578063a22cb465146102ab57600080fd5b806313a69df91161011557806313a69df9146101e657806323b872dd146101f95780633991edb81461020c57806342842e0e1461021f5780636352211e1461023257806370a082311461024557600080fd5b80630117494b1461015257806301ffc9a71461017b57806306fdde031461019e578063081812fc146101a6578063095ea7b3146101d1575b600080fd5b610165610160366004611c02565b6103c9565b6040516101729190611ca3565b60405180910390f35b61018e610189366004611ccc565b610475565b6040519015158152602001610172565b610165610486565b6101b96101b4366004611ce9565b610518565b6040516001600160a01b039091168152602001610172565b6101e46101df366004611d1e565b6105b2565b005b6101656101f4366004611d48565b6106c7565b6101e4610207366004611d63565b6106e7565b600a546101b9906001600160a01b031681565b6101e461022d366004611d63565b610725565b6101b9610240366004611ce9565b610740565b610258610253366004611d48565b6107b7565b604051908152602001610172565b6101e461083e565b6008546001600160a01b03166101b9565b6006546001600160a01b03166101b9565b6101e461029e366004611d48565b610874565b6101656108c0565b6101e46102b9366004611d9f565b6108cf565b6101e46102cc366004611ddb565b6108de565b6101656102df366004611ce9565b610910565b610165610982565b61018e6102fa366004611e57565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61037d610336366004611ce9565b600b6020526000908152604090205465ffffffffffff8082169166010000000000008104821691600160601b8204811691600160901b8104821691600160c01b9091041685565b6040805165ffffffffffff968716815294861660208601529285169284019290925283166060830152909116608082015260a001610172565b6101e46103c4366004611d48565b6109f9565b6009546060906001600160a01b0316632ea043006103ee6103e985610a94565b610a9f565b6040518263ffffffff1660e01b815260040161040a9190611e8a565b600060405180830381865afa158015610427573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261044f9190810190611f15565b60405160200161045f9190611f4a565b6040516020818303038152906040529050919050565b600061048082610dee565b92915050565b60606000805461049590611f8f565b80601f01602080910402602001604051908101604052809291908181526020018280546104c190611f8f565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105965760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105bd82610740565b9050806001600160a01b0316836001600160a01b03160361062a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161058d565b336001600160a01b0382161480610646575061064681336102fa565b6106b85760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161058d565b6106c28383610e3e565b505050565b6009546060906001600160a01b0316632ea043006103ee6103e985610eac565b6001600160a01b03831661071a576007805461071491849190600061070b83611fdf565b91905055610eca565b50505050565b6107148383836110cf565b6106c2838383604051806020016040528060008152506108de565b6000818152600260205260408120546001600160a01b0316806104805760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161058d565b60006001600160a01b0382166108225760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161058d565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146108685760405162461bcd60e51b815260040161058d90611ff8565b61087260006111dd565b565b6006546001600160a01b0316331461089e5760405162461bcd60e51b815260040161058d90611ff8565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805461049590611f8f565b6108da33838361122f565b5050565b6108e833836112fd565b6109045760405162461bcd60e51b815260040161058d9061202d565b610714848484846113f4565b6008546040516344a5a61760e11b8152600481018390526060916001600160a01b03169063894b4c2e90602401600060405180830381865afa15801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104809190810190611f15565b60085460408051631c97e82760e21b815290516060926001600160a01b03169163725fa09c9160048083019260009291908290030181865afa1580156109cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f49190810190611f15565b905090565b6006546001600160a01b03163314610a235760405162461bcd60e51b815260040161058d90611ff8565b6001600160a01b038116610a885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058d565b610a91816111dd565b50565b600061048082611427565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600954604080516308a6381560e31b815290516000926001600160a01b031691634531c0a89160048083019260209291908290030181865afa158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b38919061207e565b90506000600960009054906101000a90046001600160a01b03166001600160a01b031663eba818066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb3919061207e565b90506000600960009054906101000a90046001600160a01b03166001600160a01b0316634daebac26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e919061207e565b90506000600960009054906101000a90046001600160a01b03166001600160a01b031663cc2aa0916040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca9919061207e565b90506000600960009054906101000a90046001600160a01b03166001600160a01b0316634479cef26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d24919061207e565b90506040518060a00160405280868965ffffffffffff16610d459190612097565b65ffffffffffff1681526020018560308a901c65ffffffffffff16610d6a9190612097565b65ffffffffffff1681526020018460608a901c65ffffffffffff16610d8f9190612097565b65ffffffffffff1681526020018360908a901c65ffffffffffff16610db49190612097565b65ffffffffffff1681526020018260c08a901c65ffffffffffff16610dd99190612097565b65ffffffffffff169052979650505050505050565b60006001600160e01b031982166380ac58cd60e01b1480610e1f57506001600160e01b03198216635b5e139f60e01b145b8061048057506301ffc9a760e01b6001600160e01b0319831614610480565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e7382610740565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610eb883611433565b9050610ec381611427565b9392505050565b600080610ed684611433565b90506000600c81610ee684611427565b81526020810191909152604001600020546001600160a01b031614610f4d5760405162461bcd60e51b815260206004820152601a60248201527f457468657265756d4e6f756e53797374656d3a636c61696d6564000000000000604482015260640161058d565b610f578484611530565b83600c6000610f6584611427565b815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000610fa56103e986610eac565b6000858152600b60209081526040918290208351815485840151868601516060808901516080998a015165ffffffffffff9687166bffffffffffffffffffffffff199096169590951766010000000000009487168502176bffffffffffffffffffffffff60601b1916600160601b938716840265ffffffffffff60901b191617600160901b91871682021765ffffffffffff60c01b198116600160c01b9688168702908117988990558a5160a081018c5291881690881617815293870486169784019790975290850484168288015294840483169481019490945290910416928101929092525190915084907f1106ee9d020bfbb5ee34cf5535a5fbf024a011bd130078088cbf124ab3092478906110be908490611e8a565b60405180910390a250919392505050565b6000806110db83610740565b9050846001600160a01b0316816001600160a01b03161461113e5760405162461bcd60e51b815260206004820152601c60248201527f457468657265756d4e6f756e53797374656d3a6e6f742d6f776e657200000000604482015260640161058d565b600061114985611433565b9050856001600160a01b0316600c600061116284611427565b81526020810191909152604001600020546001600160a01b0316146111c95760405162461bcd60e51b815260206004820152601e60248201527f457468657265756d4e6f756e53797374656d3a696e76616c69642d656e730000604482015260640161058d565b6111d4868686611672565b50509392505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036112905760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000818152600260205260408120546001600160a01b03166113765760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161058d565b600061138183610740565b9050806001600160a01b0316846001600160a01b031614806113c857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806113ec5750836001600160a01b03166113e184610518565b6001600160a01b0316145b949350505050565b6113ff84848461169f565b61140b8484848461183b565b6107145760405162461bcd60e51b815260040161058d906120b9565b6000806113ec8361193c565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061146d5761146d61210b565b6001600160a01b0392831660209182029290920101526040516332fe2d9b60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063cbf8b66c906114c9908490600401612121565b600060405180830381865afa1580156114e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261150e919081019061216e565b6000815181106115205761152061210b565b6020026020010151915050919050565b6001600160a01b0382166115865760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058d565b6000818152600260205260409020546001600160a01b0316156115eb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058d565b6001600160a01b0382166000908152600360205260408120805460019290611614908490612231565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61167c33826112fd565b6116985760405162461bcd60e51b815260040161058d9061202d565b6106c28383835b826001600160a01b03166116b282610740565b6001600160a01b0316146117165760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058d565b6001600160a01b0382166117785760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058d565b611783600082610e3e565b6001600160a01b03831660009081526003602052604081208054600192906117ac908490612249565b90915550506001600160a01b03821660009081526003602052604081208054600192906117da908490612231565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b1561193157604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061187f903390899088908890600401612260565b6020604051808303816000875af19250505080156118ba575060408051601f3d908101601f191682019092526118b79181019061229d565b60015b611917573d8080156118e8576040519150601f19603f3d011682016040523d82523d6000602084013e6118ed565b606091505b50805160000361190f5760405162461bcd60e51b815260040161058d906120b9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113ec565b506001949350505050565b805160609060009081908490611953816002612231565b67ffffffffffffffff81111561196b5761196b611b55565b6040519080825280601f01601f191660200182016040528015611995576020820181803683370190505b509450600093508084036119da57600060f81b856000815181106119bb576119bb61210b565b60200101906001600160f81b031916908160001a905350505050915091565b60001981015b8281815181106119f2576119f261210b565b01602001516001600160f81b031916601760f91b03611a80578360f81b868260010181518110611a2457611a2461210b565b60200101906001600160f81b031916908160001a90535084611a4d846001840160ff8816611b31565b60408051602081019390935282015260600160405160208183030381529060405280519060200120945060009350611ad0565b600184019350828181518110611a9857611a9861210b565b602001015160f81c60f81b868260010181518110611ab857611ab861210b565b60200101906001600160f81b031916908160001a9053505b8015611adf57600019016119e0565b5083611af083600060ff8716611b31565b6040805160208101939093528201526060016040516020818303038152906040528051906020012093508260f81b856000815181106119bb576119bb61210b565b8251600090611b408385612231565b1115611b4b57600080fd5b5091016020012090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b9457611b94611b55565b604052919050565b600067ffffffffffffffff821115611bb657611bb6611b55565b50601f01601f191660200190565b6000611bd7611bd284611b9c565b611b6b565b9050828152838383011115611beb57600080fd5b828260208301376000602084830101529392505050565b600060208284031215611c1457600080fd5b813567ffffffffffffffff811115611c2b57600080fd5b8201601f81018413611c3c57600080fd5b6113ec84823560208401611bc4565b60005b83811015611c66578181015183820152602001611c4e565b838111156107145750506000910152565b60008151808452611c8f816020860160208601611c4b565b601f01601f19169290920160200192915050565b602081526000610ec36020830184611c77565b6001600160e01b031981168114610a9157600080fd5b600060208284031215611cde57600080fd5b8135610ec381611cb6565b600060208284031215611cfb57600080fd5b5035919050565b80356001600160a01b0381168114611d1957600080fd5b919050565b60008060408385031215611d3157600080fd5b611d3a83611d02565b946020939093013593505050565b600060208284031215611d5a57600080fd5b610ec382611d02565b600080600060608486031215611d7857600080fd5b611d8184611d02565b9250611d8f60208501611d02565b9150604084013590509250925092565b60008060408385031215611db257600080fd5b611dbb83611d02565b915060208301358015158114611dd057600080fd5b809150509250929050565b60008060008060808587031215611df157600080fd5b611dfa85611d02565b9350611e0860208601611d02565b925060408501359150606085013567ffffffffffffffff811115611e2b57600080fd5b8501601f81018713611e3c57600080fd5b611e4b87823560208401611bc4565b91505092959194509250565b60008060408385031215611e6a57600080fd5b611e7383611d02565b9150611e8160208401611d02565b90509250929050565b815165ffffffffffff9081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b600082601f830112611ee157600080fd5b8151611eef611bd282611b9c565b818152846020838601011115611f0457600080fd5b6113ec826020830160208701611c4b565b600060208284031215611f2757600080fd5b815167ffffffffffffffff811115611f3e57600080fd5b6113ec84828501611ed0565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815260008251611f8281601a850160208701611c4b565b91909101601a0192915050565b600181811c90821680611fa357607f821691505b602082108103611fc357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611ff157611ff1611fc9565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60006020828403121561209057600080fd5b5051919050565b6000826120b457634e487b7160e01b600052601260045260246000fd5b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156121625783516001600160a01b03168352928401929184019160010161213d565b50909695505050505050565b6000602080838503121561218157600080fd5b825167ffffffffffffffff8082111561219957600080fd5b818501915085601f8301126121ad57600080fd5b8151818111156121bf576121bf611b55565b8060051b6121ce858201611b6b565b91825283810185019185810190898411156121e857600080fd5b86860192505b83831015612224578251858111156122065760008081fd5b6122148b89838a0101611ed0565b83525091860191908601906121ee565b9998505050505050505050565b6000821982111561224457612244611fc9565b500190565b60008282101561225b5761225b611fc9565b500390565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061229390830184611c77565b9695505050505050565b6000602082840312156122af57600080fd5b8151610ec381611cb656fea2646970667358221220ce38ddbd31730034f17bed630366f783a7c733cd37bacc87c2bac64a4812e79b64736f6c634300080f0033";

type EthereumNounSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthereumNounSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthereumNounSystem__factory extends ContractFactory {
  constructor(...args: EthereumNounSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthereumNounSystem";
  }

  deploy(
    name_: string,
    symbol_: string,
    _erc721Storage_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthereumNounSystem> {
    return super.deploy(
      name_,
      symbol_,
      _erc721Storage_,
      overrides || {}
    ) as Promise<EthereumNounSystem>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    _erc721Storage_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      _erc721Storage_,
      overrides || {}
    );
  }
  attach(address: string): EthereumNounSystem {
    return super.attach(address) as EthereumNounSystem;
  }
  connect(signer: Signer): EthereumNounSystem__factory {
    return super.connect(signer) as EthereumNounSystem__factory;
  }
  static readonly contractName: "EthereumNounSystem";
  public readonly contractName: "EthereumNounSystem";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthereumNounSystemInterface {
    return new utils.Interface(_abi) as EthereumNounSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthereumNounSystem {
    return new Contract(address, _abi, signerOrProvider) as EthereumNounSystem;
  }
}
