/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Example, ExampleInterface } from "../Example";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsafeRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongFrom",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "ERC721StorageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerCandidate",
        type: "address",
      },
    ],
    name: "OwnerUpdateInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getERC721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "preview",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017703803806200177083398101604081905262000034916200019f565b8282823383836000620000488382620002bb565b506001620000578282620002bb565b5050600680546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600980546001600160a01b0319166001600160a01b039290921691909117905550620003879350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fa57600080fd5b81516001600160401b0380821115620001175762000117620000d2565b604051601f8301601f19908116603f01168101908282118183101715620001425762000142620000d2565b816040528381526020925086838588010111156200015f57600080fd5b600091505b8382101562000183578582018301518183018401529082019062000164565b83821115620001955760008385830101525b9695505050505050565b600080600060608486031215620001b557600080fd5b83516001600160401b0380821115620001cd57600080fd5b620001db87838801620000e8565b94506020860151915080821115620001f257600080fd5b506200020186828701620000e8565b604086015190935090506001600160a01b03811681146200022157600080fd5b809150509250925092565b600181811c908216806200024157607f821691505b6020821081036200026257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b657600081815260208120601f850160051c81016020861015620002915750805b601f850160051c820191505b81811015620002b2578281556001016200029d565b5050505b505050565b81516001600160401b03811115620002d757620002d7620000d2565b620002ef81620002e884546200022c565b8462000268565b602080601f8311600181146200032757600084156200030e5750858301515b600019600386901b1c1916600185901b178555620002b2565b600085815260208120601f198616915b82811015620003585788860151825594840194600190910190840162000337565b5085821015620003775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113d980620003976000396000f3fe6080604052600436106101405760003560e01c806387a89ee6116100b6578063b88d4fde1161006f578063b88d4fde14610386578063bd9b6d86146103a6578063c87b56dd146103ae578063e8a3d485146103ce578063e985e9c5146103e3578063f2fde38b1461041e57600080fd5b806387a89ee6146102d35780638da5cb5b146102f15780639137c1a71461031157806395d89b4114610331578063a22cb46514610346578063b35173501461036657600080fd5b806323b872dd1161010857806323b872dd1461022b57806328c23a451461024b5780632f54bf6e1461025357806342842e0e146102735780636352211e1461029357806370a08231146102b357600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101ea57806318160ddd1461020c575b600080fd5b34801561015157600080fd5b50610165610160366004610ec7565b610431565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f610442565b6040516101719190610f43565b3480156101a857600080fd5b506101d26101b7366004610f56565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610171565b3480156101f657600080fd5b5061020a610205366004610f84565b6104d0565b005b34801561021857600080fd5b506008545b604051908152602001610171565b34801561023757600080fd5b5061020a610246366004610fb0565b610596565b61020a61061f565b34801561025f57600080fd5b5061016561026e366004610ff1565b610688565b34801561027f57600080fd5b5061020a61028e366004610fb0565b6106b4565b34801561029f57600080fd5b506101d26102ae366004610f56565b610782565b3480156102bf57600080fd5b5061021d6102ce366004610ff1565b6107bd565b3480156102df57600080fd5b506009546001600160a01b03166101d2565b3480156102fd57600080fd5b506006546101d2906001600160a01b031681565b34801561031d57600080fd5b5061020a61032c366004610ff1565b610802565b34801561033d57600080fd5b5061018f610880565b34801561035257600080fd5b5061020a61036136600461100e565b61088d565b34801561037257600080fd5b5061018f6103813660046110bb565b6108f9565b34801561039257600080fd5b5061020a6103a136600461113b565b6109d7565b61020a610a9a565b3480156103ba57600080fd5b5061018f6103c9366004610f56565b610b72565b3480156103da57600080fd5b5061018f610c05565b3480156103ef57600080fd5b506101656103fe3660046111da565b600560209081526000928352604080842090915290825290205460ff1681565b61020a61042c366004610ff1565b610c7c565b600061043c82610cf2565b92915050565b6000805461044f90611208565b80601f016020809104026020016040519081016040528092919081815260200182805461047b90611208565b80156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b031633811480159061051c57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff16155b1561053a5760405163fe822d7b60e01b815260040160405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6001600160a01b0383166105c7576105c1826008600081546105b790611242565b9182905550610d40565b50505050565b6105d0826107bd565b1561061a5760405162461bcd60e51b815260206004820152601660248201527522bc30b6b836329d31bab93932b73a16b437b63232b960511b604482015260640160405180910390fd5b505050565b6006546001600160a01b03163314610649576040516282b42960e81b815260040160405180910390fd5b600680546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b6001600160a01b0381166000908152600a60205260408120546106ac57600061043c565b600192915050565b6106bf838383610596565b6001600160a01b0382163b1561061a57604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611269565b6001600160e01b0319161461061a57604051633da6393160e01b815260040160405180910390fd5b6000818152600260205260409020546001600160a01b0316806107b857604051634d5e5fb360e01b815260040160405180910390fd5b919050565b60006001600160a01b0382166107e65760405163d92e233d60e01b815260040160405180910390fd5b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b0316331461082c576040516282b42960e81b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527fd833c7cea3bce2562e201bf7e85016d0bc1173580c719f63378cc5d0457552b69060200160405180910390a150565b6001805461044f90611208565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60095460408051634d0b849560e11b815290516060926001600160a01b031691639a17092a9160048083019260209291908290030181865afa158015610943573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109679190611286565b6001600160a01b031663316df61e836040518263ffffffff1660e01b81526004016109929190610f43565b600060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261043c91908101906112a3565b6109e2858585610596565b6001600160a01b0384163b15610a9357604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610a289033908a9089908990899060040161131a565b6020604051808303816000875af1158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611269565b6001600160e01b03191614610a9357604051633da6393160e01b815260040160405180910390fd5b5050505050565b600754600160a01b900460ff1615610b33576006546001600160a01b03163314610ad6576040516282b42960e81b815260040160405180910390fd5b6007805460ff60a01b198116909155600680546001600160a01b0319166001600160a01b039092169182179055604051819033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6007546001600160a01b03163314610b5d576040516282b42960e81b815260040160405180910390fd5b6007805460ff60a01b1916600160a01b179055565b6060600080610b8084610d6d565b600954604051637833cb0b60e11b81529294509092506001600160a01b03169063f067961690610bb89087908690869060040161136e565b600060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bfd91908101906112a3565b949350505050565b60095460408051631c97e82760e21b815290516060926001600160a01b03169163725fa09c9160048083019260009291908290030181865afa158015610c4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c7791908101906112a3565b905090565b6006546001600160a01b03163314610ca6576040516282b42960e81b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b03831690811790915560405133907f365e8eca24e61548e99db9d948e4f9cf79224bcbf4fc81afe651e6e80921c87590600090a350565b60006301ffc9a760e01b6001600160e01b031983161480610d2357506380ac58cd60e01b6001600160e01b03198316145b8061043c5750506001600160e01b031916635b5e139f60e01b1490565b6000610d4c8383610de6565b506001600160a01b03919091166000908152600a6020526040902081905590565b6060806000604051602001610d999060208082526003908201526203078360ec1b604082015260600190565b60405160208183030381529060405290506000610db585610782565b604080516001600160a01b0390921660208301520160408051601f1981840301815291905291959194509092505050565b6001600160a01b038216610e0d57604051634e46966960e11b815260040160405180910390fd5b6000818152600260205260409020546001600160a01b031615610e4357604051631bbdf5c560e31b815260040160405180910390fd5b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610ec457600080fd5b50565b600060208284031215610ed957600080fd5b8135610ee481610eae565b9392505050565b60005b83811015610f06578181015183820152602001610eee565b838111156105c15750506000910152565b60008151808452610f2f816020860160208601610eeb565b601f01601f19169290920160200192915050565b602081526000610ee46020830184610f17565b600060208284031215610f6857600080fd5b5035919050565b6001600160a01b0381168114610ec457600080fd5b60008060408385031215610f9757600080fd5b8235610fa281610f6f565b946020939093013593505050565b600080600060608486031215610fc557600080fd5b8335610fd081610f6f565b92506020840135610fe081610f6f565b929592945050506040919091013590565b60006020828403121561100357600080fd5b8135610ee481610f6f565b6000806040838503121561102157600080fd5b823561102c81610f6f565b91506020830135801515811461104157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561108b5761108b61104c565b604052919050565b600067ffffffffffffffff8211156110ad576110ad61104c565b50601f01601f191660200190565b6000602082840312156110cd57600080fd5b813567ffffffffffffffff8111156110e457600080fd5b8201601f810184136110f557600080fd5b803561110861110382611093565b611062565b81815285602083850101111561111d57600080fd5b81602084016020830137600091810160200191909152949350505050565b60008060008060006080868803121561115357600080fd5b853561115e81610f6f565b9450602086013561116e81610f6f565b935060408601359250606086013567ffffffffffffffff8082111561119257600080fd5b818801915088601f8301126111a657600080fd5b8135818111156111b557600080fd5b8960208285010111156111c757600080fd5b9699959850939650602001949392505050565b600080604083850312156111ed57600080fd5b82356111f881610f6f565b9150602083013561104181610f6f565b600181811c9082168061121c57607f821691505b60208210810361123c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161126257634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561127b57600080fd5b8151610ee481610eae565b60006020828403121561129857600080fd5b8151610ee481610f6f565b6000602082840312156112b557600080fd5b815167ffffffffffffffff8111156112cc57600080fd5b8201601f810184136112dd57600080fd5b80516112eb61110382611093565b81815285602083850101111561130057600080fd5b611311826020830160208601610eeb565b95945050505050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b8381526060602082015260006113876060830185610f17565b82810360408401526113998185610f17565b969550505050505056fea26469706673582212203a7107c3226f7739e9556679435e94ab39dac8fb2defd2d3e7a6cfd0db7f48c364736f6c634300080f0033";

type ExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Example__factory extends ContractFactory {
  constructor(...args: ExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Example";
  }

  deploy(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Example> {
    return super.deploy(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    ) as Promise<Example>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    );
  }
  attach(address: string): Example {
    return super.attach(address) as Example;
  }
  connect(signer: Signer): Example__factory {
    return super.connect(signer) as Example__factory;
  }
  static readonly contractName: "Example";
  public readonly contractName: "Example";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleInterface {
    return new utils.Interface(_abi) as ExampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Example {
    return new Contract(address, _abi, signerOrProvider) as Example;
  }
}
