/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SVGRegistry, SVGRegistryInterface } from "../SVGRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "widgetId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "fetch",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "widgetId",
        type: "bytes32",
      },
    ],
    name: "getWidget",
    outputs: [
      {
        internalType: "address",
        name: "widget",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "widgetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "widget",
        type: "address",
      },
    ],
    name: "setWidget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105d88061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631045b14e146100675780633a68f5db1461007c578063715018a6146100a55780638da5cb5b146100ad578063e0d18500146100d2578063f2fde38b146100fb575b600080fd5b61007a61007536600461035c565b61010e565b005b61008f61008a3660046103f7565b610144565b60405161009c91906104dd565b60405180910390f35b61007a610204565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161009c565b6100ba6100e03660046104f7565b6000908152600160205260409020546001600160a01b031690565b61007a610109366004610510565b610218565b610116610296565b60009182526001602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6000828152600160205260409020546060906001600160a01b0316156101ed57600083815260016020526040908190205490516318b6fb0f60e11b81526001600160a01b039091169063316df61e906101a19085906004016104dd565b600060405180830381865afa1580156101be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e6919081019061052b565b90506101fe565b506040805160208101909152600081525b92915050565b61020c610296565b61021660006102f0565b565b610220610296565b6001600160a01b03811661028a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610293816102f0565b50565b6000546001600160a01b031633146102165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610281565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461035757600080fd5b919050565b6000806040838503121561036f57600080fd5b8235915061037f60208401610340565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103c7576103c7610388565b604052919050565b600067ffffffffffffffff8211156103e9576103e9610388565b50601f01601f191660200190565b6000806040838503121561040a57600080fd5b82359150602083013567ffffffffffffffff81111561042857600080fd5b8301601f8101851361043957600080fd5b803561044c610447826103cf565b61039e565b81815286602083850101111561046157600080fd5b816020840160208301376000602083830101528093505050509250929050565b60005b8381101561049c578181015183820152602001610484565b838111156104ab576000848401525b50505050565b600081518084526104c9816020860160208601610481565b601f01601f19169290920160200192915050565b6020815260006104f060208301846104b1565b9392505050565b60006020828403121561050957600080fd5b5035919050565b60006020828403121561052257600080fd5b6104f082610340565b60006020828403121561053d57600080fd5b815167ffffffffffffffff81111561055457600080fd5b8201601f8101841361056557600080fd5b8051610573610447826103cf565b81815285602083850101111561058857600080fd5b610599826020830160208601610481565b9594505050505056fea2646970667358221220ce10b251b2449c135b6bebc44932dd6f0723181344a554a12db97d6c84736fa464736f6c634300080f0033";

type SVGRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SVGRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SVGRegistry__factory extends ContractFactory {
  constructor(...args: SVGRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SVGRegistry";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SVGRegistry> {
    return super.deploy(overrides || {}) as Promise<SVGRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SVGRegistry {
    return super.attach(address) as SVGRegistry;
  }
  connect(signer: Signer): SVGRegistry__factory {
    return super.connect(signer) as SVGRegistry__factory;
  }
  static readonly contractName: "SVGRegistry";
  public readonly contractName: "SVGRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SVGRegistryInterface {
    return new utils.Interface(_abi) as SVGRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SVGRegistry {
    return new Contract(address, _abi, signerOrProvider) as SVGRegistry;
  }
}
