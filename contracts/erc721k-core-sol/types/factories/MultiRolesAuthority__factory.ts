/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiRolesAuthority,
  MultiRolesAuthorityInterface,
} from "../MultiRolesAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "PublicCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RoleCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "authority",
        type: "address",
      },
    ],
    name: "TargetCustomAuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "UserRoleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "doesRoleHaveCapability",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
    ],
    name: "doesUserHaveRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "getRolesWithCapability",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getTargetCustomAuthority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "isCapabilityPublic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setPublicCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRoleCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "customAuthority",
        type: "address",
      },
    ],
    name: "setTargetCustomAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setUserRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d1e380380610d1e83398101604081905261002f916100e1565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505061011b565b6001600160a01b03811681146100de57600080fd5b50565b600080604083850312156100f457600080fd5b82516100ff816100c9565b6020840151909250610110816100c9565b809150509250929050565b610bf48061012a6000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063e688747b11610059578063e688747b146102b0578063ea7ca276146102f3578063ed0d0efb14610337578063f2fde38b1461036457600080fd5b80638da5cb5b14610202578063b70096131461023a578063bf7e214f1461025a578063c53a39851461027a57600080fd5b80634b5159da116100c65780634b5159da1461018f57806367aff484146101af578063728b952b146101cf5780637a9e5e4b146101ef57600080fd5b806306a36aee146100ed5780630bade8a41461012d5780630ea9b75b1461016d575b600080fd5b3480156100f957600080fd5b5061011a610108366004610980565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561013957600080fd5b5061015d6101483660046109ba565b60046020526000908152604090205460ff1681565b6040519015158152602001610124565b34801561017957600080fd5b5061018d6101883660046109f4565b610384565b005b34801561019b57600080fd5b5061018d6101aa366004610a3b565b61045c565b3480156101bb57600080fd5b5061018d6101ca366004610a72565b6104ee565b3480156101db57600080fd5b5061018d6101ea366004610aa0565b6105b6565b61018d6101fd366004610980565b61063f565b34801561020e57600080fd5b50600054610222906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b34801561024657600080fd5b5061015d610255366004610ace565b610741565b34801561026657600080fd5b50600154610222906001600160a01b031681565b34801561028657600080fd5b50610222610295366004610980565b6002602052600090815260409020546001600160a01b031681565b3480156102bc57600080fd5b5061015d6102cb366004610b15565b6001600160e01b03191660009081526005602052604090205460ff919091161c600116151590565b3480156102ff57600080fd5b5061015d61030e366004610b48565b6001600160a01b0391909116600090815260036020526040902054600160ff9092161c16151590565b34801561034357600080fd5b5061011a6103523660046109ba565b60056020526000908152604090205481565b34801561037057600080fd5b5061018d61037f366004610980565b610841565b61039a336000356001600160e01b0319166108be565b6103b6576040516282b42960e81b815260040160405180910390fd5b80156103e6576001600160e01b0319821660009081526005602052604090208054600160ff86161b17905561040d565b6001600160e01b0319821660009081526005602052604090208054600160ff86161b191690555b816001600160e01b0319168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b1518360405161044f911515815260200190565b60405180910390a3505050565b610472336000356001600160e01b0319166108be565b61048e576040516282b42960e81b815260040160405180910390fd5b6001600160e01b03198216600081815260046020908152604091829020805460ff191685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610504336000356001600160e01b0319166108be565b610520576040516282b42960e81b815260040160405180910390fd5b801561054f576001600160a01b03831660009081526003602052604090208054600160ff85161b179055610575565b6001600160a01b03831660009081526003602052604090208054600160ff85161b191690555b8160ff16836001600160a01b03167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf28360405161044f911515815260200190565b6105cc336000356001600160e01b0319166108be565b6105e8576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0382811660008181526002602052604080822080546001600160a01b0319169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b6000546001600160a01b031633148015906106d8575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061069590339030906001600160e01b03196000351690600401610b74565b602060405180830381865afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610ba1565b155b156106f5576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001600160a01b0380831660009081526002602052604081205490911680156107dd5760405163b700961360e01b81526001600160a01b0382169063b70096139061079490889088908890600401610b74565b602060405180830381865afa1580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190610ba1565b91505061083a565b6001600160e01b0319831660009081526004602052604090205460ff168061083657506001600160e01b031983166000908152600560209081526040808320546001600160a01b03891684526003909252909120541615155b9150505b9392505050565b610857336000356001600160e01b0319166108be565b610873576040516282b42960e81b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b6001546000906001600160a01b03168015801590610948575060405163b700961360e01b81526001600160a01b0382169063b70096139061090790879030908890600401610b74565b602060405180830381865afa158015610924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109489190610ba1565b8061096057506000546001600160a01b038581169116145b949350505050565b6001600160a01b038116811461097d57600080fd5b50565b60006020828403121561099257600080fd5b813561083a81610968565b80356001600160e01b0319811681146109b557600080fd5b919050565b6000602082840312156109cc57600080fd5b61083a8261099d565b803560ff811681146109b557600080fd5b801515811461097d57600080fd5b600080600060608486031215610a0957600080fd5b610a12846109d5565b9250610a206020850161099d565b91506040840135610a30816109e6565b809150509250925092565b60008060408385031215610a4e57600080fd5b610a578361099d565b91506020830135610a67816109e6565b809150509250929050565b600080600060608486031215610a8757600080fd5b8335610a9281610968565b9250610a20602085016109d5565b60008060408385031215610ab357600080fd5b8235610abe81610968565b91506020830135610a6781610968565b600080600060608486031215610ae357600080fd5b8335610aee81610968565b92506020840135610afe81610968565b9150610b0c6040850161099d565b90509250925092565b60008060408385031215610b2857600080fd5b610b31836109d5565b9150610b3f6020840161099d565b90509250929050565b60008060408385031215610b5b57600080fd5b8235610b6681610968565b9150610b3f602084016109d5565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b600060208284031215610bb357600080fd5b815161083a816109e656fea264697066735822122085d6a958eaa9012ed1a4d415d3daaa1761abc20b3cbf636ceb24c092f2fa051864736f6c634300080f0033";

type MultiRolesAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiRolesAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiRolesAuthority__factory extends ContractFactory {
  constructor(...args: MultiRolesAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MultiRolesAuthority";
  }

  deploy(
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiRolesAuthority> {
    return super.deploy(
      _owner,
      _authority,
      overrides || {}
    ) as Promise<MultiRolesAuthority>;
  }
  getDeployTransaction(
    _owner: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _authority, overrides || {});
  }
  attach(address: string): MultiRolesAuthority {
    return super.attach(address) as MultiRolesAuthority;
  }
  connect(signer: Signer): MultiRolesAuthority__factory {
    return super.connect(signer) as MultiRolesAuthority__factory;
  }
  static readonly contractName: "MultiRolesAuthority";
  public readonly contractName: "MultiRolesAuthority";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiRolesAuthorityInterface {
    return new utils.Interface(_abi) as MultiRolesAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiRolesAuthority {
    return new Contract(address, _abi, signerOrProvider) as MultiRolesAuthority;
  }
}
