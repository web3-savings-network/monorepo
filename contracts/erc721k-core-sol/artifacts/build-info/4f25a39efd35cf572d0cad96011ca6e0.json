{
  "id": "4f25a39efd35cf572d0cad96011ca6e0",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Solbase/utils/LibRLP.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Library for computing contract addresses from their deployer and nonce.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibRLP.sol)\n/// @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/LibRLP.sol)\nlibrary LibRLP {\n    // prettier-ignore\n    function computeAddress(address deployer, uint256 nonce) internal pure returns (address deployed) {\n        // @dev The theoretical allowed limit, based on EIP-2681,\n        // for an account nonce is 2**64-2: https://eips.ethereum.org/EIPS/eip-2681.\n\n        // Caution! This function will NOT check that the nonce is within the theoretical range.\n        // This is for performance, as exceeding the range is extremely impractical.\n        // It is the user's responsibility to ensure that the nonce is valid\n        // (e.g. no dirty bits after packing / unpacking).\n        assembly {\n            // prettier-ignore\n            for {} 1 {} {\n                // The integer zero is treated as an empty byte string,\n                // and as a result it only has a length prefix, 0x80,\n                // computed via `0x80 + 0`.\n\n                // A one-byte integer in the [0x00, 0x7f] range uses its \n                // own value as a length prefix,\n                // there is no additional `0x80 + length` prefix that precedes it.\n                if iszero(gt(nonce, 0x7f)) {\n                    mstore(0x00, deployer)\n                    // Using `mstore8` instead of `or` naturally cleans\n                    // any dirty upper bits of `deployer`.\n                    mstore8(0x0b, 0x94)\n                    mstore8(0x0a, 0xd6)\n                    // `shl` 7 is equivalent to multiplying by 0x80.\n                    mstore8(0x20, or(shl(7, iszero(nonce)), nonce))\n                    deployed := keccak256(0x0a, 0x17)\n                    break\n                }\n                let i := 8\n                // Just use a loop to generalize all the way with minimal bytecode size.\n                // prettier-ignore\n                for {} shr(i, nonce) { i := add(i, 8) } {}\n                // `shr` 3 is equivalent to dividing by 8.\n                i := shr(3, i)\n                // Store in descending slot sequence to overlap the values correctly.\n                mstore(i, nonce)\n                mstore(0x00, shl(8, deployer))\n                mstore8(0x1f, add(0x80, i))\n                mstore8(0x0a, 0x94)\n                mstore8(0x09, add(0xd6, i))\n                deployed := keccak256(0x09, add(0x17, i))\n                break\n            }\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Solbase/utils/LibRLP.sol": {
        "LibRLP": {
          "abi": [],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibRLP.sol)Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/LibRLP.sol)",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206070f941bd8281ad0f5eee703136a10ce3039992440ceeb860de5e7b1c12787b64736f6c634300080f0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x70 0xF9 COINBASE 0xBD DUP3 DUP2 0xAD 0xF 0x5E 0xEE PUSH17 0x3136A10CE3039992440CEEB860DE5E7B1C SLT PUSH25 0x7B64736F6C634300080F003300000000000000000000000000 ",
              "sourceMap": "331:2318:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;331:2318:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206070f941bd8281ad0f5eee703136a10ce3039992440ceeb860de5e7b1c12787b64736f6c634300080f0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x70 0xF9 COINBASE 0xBD DUP3 DUP2 0xAD 0xF 0x5E 0xEE PUSH17 0x3136A10CE3039992440CEEB860DE5E7B1C SLT PUSH25 0x7B64736F6C634300080F003300000000000000000000000000 ",
              "sourceMap": "331:2318:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "computeAddress(address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibRLP.sol)Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/LibRLP.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for computing contract addresses from their deployer and nonce.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/LibRLP.sol\":\"LibRLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/LibRLP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Library for computing contract addresses from their deployer and nonce.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibRLP.sol)\\n/// @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/LibRLP.sol)\\nlibrary LibRLP {\\n    // prettier-ignore\\n    function computeAddress(address deployer, uint256 nonce) internal pure returns (address deployed) {\\n        // @dev The theoretical allowed limit, based on EIP-2681,\\n        // for an account nonce is 2**64-2: https://eips.ethereum.org/EIPS/eip-2681.\\n\\n        // Caution! This function will NOT check that the nonce is within the theoretical range.\\n        // This is for performance, as exceeding the range is extremely impractical.\\n        // It is the user's responsibility to ensure that the nonce is valid\\n        // (e.g. no dirty bits after packing / unpacking).\\n        assembly {\\n            // prettier-ignore\\n            for {} 1 {} {\\n                // The integer zero is treated as an empty byte string,\\n                // and as a result it only has a length prefix, 0x80,\\n                // computed via `0x80 + 0`.\\n\\n                // A one-byte integer in the [0x00, 0x7f] range uses its \\n                // own value as a length prefix,\\n                // there is no additional `0x80 + length` prefix that precedes it.\\n                if iszero(gt(nonce, 0x7f)) {\\n                    mstore(0x00, deployer)\\n                    // Using `mstore8` instead of `or` naturally cleans\\n                    // any dirty upper bits of `deployer`.\\n                    mstore8(0x0b, 0x94)\\n                    mstore8(0x0a, 0xd6)\\n                    // `shl` 7 is equivalent to multiplying by 0x80.\\n                    mstore8(0x20, or(shl(7, iszero(nonce)), nonce))\\n                    deployed := keccak256(0x0a, 0x17)\\n                    break\\n                }\\n                let i := 8\\n                // Just use a loop to generalize all the way with minimal bytecode size.\\n                // prettier-ignore\\n                for {} shr(i, nonce) { i := add(i, 8) } {}\\n                // `shr` 3 is equivalent to dividing by 8.\\n                i := shr(3, i)\\n                // Store in descending slot sequence to overlap the values correctly.\\n                mstore(i, nonce)\\n                mstore(0x00, shl(8, deployer))\\n                mstore8(0x1f, add(0x80, i))\\n                mstore8(0x0a, 0x94)\\n                mstore8(0x09, add(0xd6, i))\\n                deployed := keccak256(0x09, add(0x17, i))\\n                break\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa6a1927279b8a3921c095b86ac2e335707b2f6f25576ed28c317eee459274807\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Library for computing contract addresses from their deployer and nonce.",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/Solbase/utils/LibRLP.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/LibRLP.sol",
          "exportedSymbols": {
            "LibRLP": [
              14
            ]
          },
          "id": 15,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "LibRLP",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:274:0",
                "text": "@notice Library for computing contract addresses from their deployer and nonce.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibRLP.sol)\n @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/LibRLP.sol)"
              },
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "LibRLP",
              "nameLocation": "339:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "473:2174:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "962:1679:0",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1019:1612:0",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1457:490:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1486:4:0",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "name": "deployer",
                                                "nodeType": "YulIdentifier",
                                                "src": "1492:8:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "1479:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1479:22:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1479:22:0"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1661:4:0",
                                                "type": "",
                                                "value": "0x0b"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1667:4:0",
                                                "type": "",
                                                "value": "0x94"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1653:7:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1653:19:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1653:19:0"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1701:4:0",
                                                "type": "",
                                                "value": "0x0a"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1707:4:0",
                                                "type": "",
                                                "value": "0xd6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1693:7:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1693:19:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1693:19:0"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1810:4:0",
                                                "type": "",
                                                "value": "0x20"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "1823:1:0",
                                                        "type": "",
                                                        "value": "7"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "nonce",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1833:5:0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "iszero",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "1826:6:0"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "1826:13:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "shl",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1819:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1819:21:0"
                                                  },
                                                  {
                                                    "name": "nonce",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1842:5:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "or",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1816:2:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1816:32:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore8",
                                              "nodeType": "YulIdentifier",
                                              "src": "1802:7:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1802:47:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1802:47:0"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "1870:33:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1892:4:0",
                                                "type": "",
                                                "value": "0x0a"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1898:4:0",
                                                "type": "",
                                                "value": "0x17"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "keccak256",
                                              "nodeType": "YulIdentifier",
                                              "src": "1882:9:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1882:21:0"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deployed",
                                              "nodeType": "YulIdentifier",
                                              "src": "1870:8:0"
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulBreak",
                                          "src": "1924:5:0"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "nonce",
                                              "nodeType": "YulIdentifier",
                                              "src": "1443:5:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1450:4:0",
                                              "type": "",
                                              "value": "0x7f"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "1440:2:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1440:15:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "1433:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1433:23:0"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1430:517:0"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1964:10:0",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1973:1:0",
                                      "type": "",
                                      "value": "8"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "1968:1:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2155:2:0",
                                      "statements": []
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2126:1:0"
                                        },
                                        {
                                          "name": "nonce",
                                          "nodeType": "YulIdentifier",
                                          "src": "2129:5:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2122:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2122:13:0"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "2136:18:0",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2138:14:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "2147:1:0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2150:1:0",
                                                "type": "",
                                                "value": "8"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2143:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2143:9:0"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2138:1:0"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "2119:2:0",
                                      "statements": []
                                    },
                                    "src": "2115:42:0"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2233:14:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2242:1:0",
                                          "type": "",
                                          "value": "3"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2245:1:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2238:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2238:9:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2233:1:0"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2357:1:0"
                                        },
                                        {
                                          "name": "nonce",
                                          "nodeType": "YulIdentifier",
                                          "src": "2360:5:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2350:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2350:16:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2350:16:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2390:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2400:1:0",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "name": "deployer",
                                              "nodeType": "YulIdentifier",
                                              "src": "2403:8:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2396:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2396:16:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2383:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2383:30:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2383:30:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2438:4:0",
                                          "type": "",
                                          "value": "0x1f"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2448:4:0",
                                              "type": "",
                                              "value": "0x80"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2454:1:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2444:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2444:12:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2430:7:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2430:27:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2430:27:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2482:4:0",
                                          "type": "",
                                          "value": "0x0a"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2488:4:0",
                                          "type": "",
                                          "value": "0x94"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2474:7:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2474:19:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2474:19:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2518:4:0",
                                          "type": "",
                                          "value": "0x09"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2528:4:0",
                                              "type": "",
                                              "value": "0xd6"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2534:1:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2524:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2524:12:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2510:7:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2510:27:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2510:27:0"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2554:41:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2576:4:0",
                                          "type": "",
                                          "value": "0x09"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2586:4:0",
                                              "type": "",
                                              "value": "0x17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "2592:1:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2582:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2582:12:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "2566:9:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2566:29:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "deployed",
                                        "nodeType": "YulIdentifier",
                                        "src": "2554:8:0"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulBreak",
                                    "src": "2612:5:0"
                                  }
                                ]
                              },
                              "condition": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1014:1:0",
                                "type": "",
                                "value": "1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1016:2:0",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1011:2:0",
                                "statements": []
                              },
                              "src": "1007:1624:0"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1870:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2554:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1492:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2403:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1443:5:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1833:5:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1842:5:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2129:5:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2360:5:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 11,
                        "nodeType": "InlineAssembly",
                        "src": "953:1688:0"
                      }
                    ]
                  },
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeAddress",
                  "nameLocation": "384:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "407:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "399:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "399:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "425:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "417:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "398:33:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "deployed",
                        "nameLocation": "463:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "455:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "455:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "454:18:0"
                  },
                  "scope": 14,
                  "src": "375:2272:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 15,
              "src": "331:2318:0",
              "usedErrors": []
            }
          ],
          "src": "32:2618:0"
        },
        "id": 0
      }
    }
  }
}
