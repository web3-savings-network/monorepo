{
  "id": "bdc93d345f3bdaf6bd3e19a217ac0f18",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Solbase/utils/Permit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Signature permit interface for any EIP-2612 or Dai-style token.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)\nabstract contract Permit {\n    /// @notice Permit to spend tokens for EIP-2612 permit signatures.\n    /// @param owner The address of the token holder.\n    /// @param spender The address of the token permit holder.\n    /// @param value The amount permitted to spend.\n    /// @param deadline The unix timestamp before which permit must be spent.\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external virtual;\n\n    /// @notice Permit to spend tokens for permit signatures that have the `allowed` parameter.\n    /// @param owner The address of the token holder.\n    /// @param spender The address of the token permit holder.\n    /// @param nonce The current nonce of the `owner`.\n    /// @param deadline The unix timestamp before which permit must be spent.\n    /// @param allowed If true, `spender` will be given permission to spend `owner`'s tokens.\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\n    function permit(\n        address owner,\n        address spender,\n        uint256 nonce,\n        uint256 deadline,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external virtual;\n}\n"
      },
      "contracts/Solbase/utils/SelfPermit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {Permit} from \"./Permit.sol\";\n\n/// @notice Signature permit helper for any EIP-2612 or Dai-style token.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SelfPermit.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/SelfPermit.sol)\n/// @dev These functions are expected to be embedded in multicall to allow EOAs to approve a contract and call a function\n/// that requires an approval in a single transaction.\nabstract contract SelfPermit {\n    /// @notice Permits this contract to spend a given EIP-2612 `token` from `msg.sender`.\n    /// @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\n    /// @param token The address of the asset spent.\n    /// @param value The amount permitted to spend.\n    /// @param deadline The unix timestamp before which permit must be spent.\n    /// @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\n    /// @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\n    /// @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\n    function selfPermit(\n        Permit token,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        token.permit(msg.sender, address(this), value, deadline, v, r, s);\n    }\n\n    /// @notice Permits this contract to spend a given Dai-style `token` from `msg.sender`.\n    /// @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\n    /// @param token The address of the asset spent.\n    /// @param nonce The current nonce of the `owner`.\n    /// @param deadline The unix timestamp before which permit must be spent.\n    /// @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\n    /// @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\n    /// @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\n    function selfPermitAllowed(\n        Permit token,\n        uint256 nonce,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        token.permit(msg.sender, address(this), nonce, deadline, true, v, r, s);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Solbase/utils/Permit.sol": {
        "Permit": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)",
            "kind": "dev",
            "methods": {
              "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
                "params": {
                  "allowed": "If true, `spender` will be given permission to spend `owner`'s tokens.",
                  "deadline": "The unix timestamp before which permit must be spent.",
                  "nonce": "The current nonce of the `owner`.",
                  "owner": "The address of the token holder.",
                  "r": "Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.",
                  "s": "Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.",
                  "spender": "The address of the token permit holder.",
                  "v": "Must produce valid secp256k1 signature from the `owner` along with `r` and `s`."
                }
              },
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                "params": {
                  "deadline": "The unix timestamp before which permit must be spent.",
                  "owner": "The address of the token holder.",
                  "r": "Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.",
                  "s": "Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.",
                  "spender": "The address of the token permit holder.",
                  "v": "Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.",
                  "value": "The amount permitted to spend."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)\",\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"allowed\":\"If true, `spender` will be given permission to spend `owner`'s tokens.\",\"deadline\":\"The unix timestamp before which permit must be spent.\",\"nonce\":\"The current nonce of the `owner`.\",\"owner\":\"The address of the token holder.\",\"r\":\"Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\",\"s\":\"Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\",\"spender\":\"The address of the token permit holder.\",\"v\":\"Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The unix timestamp before which permit must be spent.\",\"owner\":\"The address of the token holder.\",\"r\":\"Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\",\"s\":\"Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\",\"spender\":\"The address of the token permit holder.\",\"v\":\"Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\",\"value\":\"The amount permitted to spend.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Permit to spend tokens for permit signatures that have the `allowed` parameter.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permit to spend tokens for EIP-2612 permit signatures.\"}},\"notice\":\"Signature permit interface for any EIP-2612 or Dai-style token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/Permit.sol\":\"Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Signature permit interface for any EIP-2612 or Dai-style token.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)\\nabstract contract Permit {\\n    /// @notice Permit to spend tokens for EIP-2612 permit signatures.\\n    /// @param owner The address of the token holder.\\n    /// @param spender The address of the token permit holder.\\n    /// @param value The amount permitted to spend.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual;\\n\\n    /// @notice Permit to spend tokens for permit signatures that have the `allowed` parameter.\\n    /// @param owner The address of the token holder.\\n    /// @param spender The address of the token permit holder.\\n    /// @param nonce The current nonce of the `owner`.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param allowed If true, `spender` will be given permission to spend `owner`'s tokens.\\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 nonce,\\n        uint256 deadline,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual;\\n}\\n\",\"keccak256\":\"0x7bf2f6ecb9372bc1d9bc96d0881647a600ec0192834a550918408133c4abee72\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
                "notice": "Permit to spend tokens for permit signatures that have the `allowed` parameter."
              },
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                "notice": "Permit to spend tokens for EIP-2612 permit signatures."
              }
            },
            "notice": "Signature permit interface for any EIP-2612 or Dai-style token.",
            "version": 1
          }
        }
      },
      "contracts/Solbase/utils/SelfPermit.sol": {
        "SelfPermit": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract Permit",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract Permit",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitAllowed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SelfPermit.sol)Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/SelfPermit.sol)",
            "details": "These functions are expected to be embedded in multicall to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.",
            "kind": "dev",
            "methods": {
              "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "details": "The `owner` is always `msg.sender` and the `spender` is always `address(this)`.",
                "params": {
                  "deadline": "The unix timestamp before which permit must be spent.",
                  "r": "Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.",
                  "s": "Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.",
                  "token": "The address of the asset spent.",
                  "v": "Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.",
                  "value": "The amount permitted to spend."
                }
              },
              "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "details": "The `owner` is always `msg.sender` and the `spender` is always `address(this)`.",
                "params": {
                  "deadline": "The unix timestamp before which permit must be spent.",
                  "nonce": "The current nonce of the `owner`.",
                  "r": "Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.",
                  "s": "Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.",
                  "token": "The address of the asset spent.",
                  "v": "Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`."
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
              "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Permit\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Permit\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SelfPermit.sol)Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/SelfPermit.sol)\",\"details\":\"These functions are expected to be embedded in multicall to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\",\"params\":{\"deadline\":\"The unix timestamp before which permit must be spent.\",\"r\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\",\"s\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\",\"token\":\"The address of the asset spent.\",\"v\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\",\"value\":\"The amount permitted to spend.\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\",\"params\":{\"deadline\":\"The unix timestamp before which permit must be spent.\",\"nonce\":\"The current nonce of the `owner`.\",\"r\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\",\"s\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\",\"token\":\"The address of the asset spent.\",\"v\":\"Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given EIP-2612 `token` from `msg.sender`.\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given Dai-style `token` from `msg.sender`.\"}},\"notice\":\"Signature permit helper for any EIP-2612 or Dai-style token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/SelfPermit.sol\":\"SelfPermit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Signature permit interface for any EIP-2612 or Dai-style token.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)\\nabstract contract Permit {\\n    /// @notice Permit to spend tokens for EIP-2612 permit signatures.\\n    /// @param owner The address of the token holder.\\n    /// @param spender The address of the token permit holder.\\n    /// @param value The amount permitted to spend.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual;\\n\\n    /// @notice Permit to spend tokens for permit signatures that have the `allowed` parameter.\\n    /// @param owner The address of the token holder.\\n    /// @param spender The address of the token permit holder.\\n    /// @param nonce The current nonce of the `owner`.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param allowed If true, `spender` will be given permission to spend `owner`'s tokens.\\n    /// @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 nonce,\\n        uint256 deadline,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual;\\n}\\n\",\"keccak256\":\"0x7bf2f6ecb9372bc1d9bc96d0881647a600ec0192834a550918408133c4abee72\",\"license\":\"MIT\"},\"contracts/Solbase/utils/SelfPermit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {Permit} from \\\"./Permit.sol\\\";\\n\\n/// @notice Signature permit helper for any EIP-2612 or Dai-style token.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SelfPermit.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/SelfPermit.sol)\\n/// @dev These functions are expected to be embedded in multicall to allow EOAs to approve a contract and call a function\\n/// that requires an approval in a single transaction.\\nabstract contract SelfPermit {\\n    /// @notice Permits this contract to spend a given EIP-2612 `token` from `msg.sender`.\\n    /// @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\\n    /// @param token The address of the asset spent.\\n    /// @param value The amount permitted to spend.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\\n    function selfPermit(\\n        Permit token,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        token.permit(msg.sender, address(this), value, deadline, v, r, s);\\n    }\\n\\n    /// @notice Permits this contract to spend a given Dai-style `token` from `msg.sender`.\\n    /// @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\\n    /// @param token The address of the asset spent.\\n    /// @param nonce The current nonce of the `owner`.\\n    /// @param deadline The unix timestamp before which permit must be spent.\\n    /// @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\\n    /// @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\\n    /// @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`.\\n    function selfPermitAllowed(\\n        Permit token,\\n        uint256 nonce,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        token.permit(msg.sender, address(this), nonce, deadline, true, v, r, s);\\n    }\\n}\\n\",\"keccak256\":\"0xe23cd7d1b774454e256899490bbe1ece5df4055528a2fb82fadbde5291875b92\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "notice": "Permits this contract to spend a given EIP-2612 `token` from `msg.sender`."
              },
              "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
                "notice": "Permits this contract to spend a given Dai-style `token` from `msg.sender`."
              }
            },
            "notice": "Signature permit helper for any EIP-2612 or Dai-style token.",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/Solbase/utils/Permit.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/Permit.sol",
          "exportedSymbols": {
            "Permit": [
              41
            ]
          },
          "id": 42,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Permit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:163:0",
                "text": "@notice Signature permit interface for any EIP-2612 or Dai-style token.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/Permit.sol)"
              },
              "fullyImplemented": false,
              "id": 41,
              "linearizedBaseContracts": [
                41
              ],
              "name": "Permit",
              "nameLocation": "238:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "251:604:0",
                    "text": "@notice Permit to spend tokens for EIP-2612 permit signatures.\n @param owner The address of the token holder.\n @param spender The address of the token permit holder.\n @param value The amount permitted to spend.\n @param deadline The unix timestamp before which permit must be spent.\n @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\n @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\n @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`."
                  },
                  "functionSelector": "d505accf",
                  "id": 20,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "869:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "893:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "885:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "916:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "908:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "941:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "933:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "964:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "956:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "956:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "988:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "982:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "982:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1007:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "999:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "999:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1026:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "1018:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "875:158:0"
                  },
                  "returnParameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:0:0"
                  },
                  "scope": 41,
                  "src": "860:191:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "1057:726:0",
                    "text": "@notice Permit to spend tokens for permit signatures that have the `allowed` parameter.\n @param owner The address of the token holder.\n @param spender The address of the token permit holder.\n @param nonce The current nonce of the `owner`.\n @param deadline The unix timestamp before which permit must be spent.\n @param allowed If true, `spender` will be given permission to spend `owner`'s tokens.\n @param v Must produce valid secp256k1 signature from the `owner` along with `r` and `s`.\n @param r Must produce valid secp256k1 signature from the `owner` along with `v` and `s`.\n @param s Must produce valid secp256k1 signature from the `owner` along with `r` and `v`."
                  },
                  "functionSelector": "8fcbaf0c",
                  "id": 40,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1797:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1821:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1813:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1844:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1836:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1836:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "1869:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1861:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1861:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1892:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1884:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1884:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "allowed",
                        "nameLocation": "1915:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1910:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1910:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1938:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1932:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1932:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1957:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1949:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1976:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1968:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1968:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1803:180:0"
                  },
                  "returnParameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2000:0:0"
                  },
                  "scope": 41,
                  "src": "1788:213:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 42,
              "src": "220:1783:0",
              "usedErrors": []
            }
          ],
          "src": "32:1972:0"
        },
        "id": 0
      },
      "contracts/Solbase/utils/SelfPermit.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/SelfPermit.sol",
          "exportedSymbols": {
            "Permit": [
              41
            ],
            "SelfPermit": [
              116
            ]
          },
          "id": 117,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 43,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "contracts/Solbase/utils/Permit.sol",
              "file": "./Permit.sol",
              "id": 45,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 117,
              "sourceUnit": 42,
              "src": "57:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 44,
                    "name": "Permit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "65:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "SelfPermit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 46,
                "nodeType": "StructuredDocumentation",
                "src": "95:457:1",
                "text": "@notice Signature permit helper for any EIP-2612 or Dai-style token.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SelfPermit.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/SelfPermit.sol)\n @dev These functions are expected to be embedded in multicall to allow EOAs to approve a contract and call a function\n that requires an approval in a single transaction."
              },
              "fullyImplemented": true,
              "id": 116,
              "linearizedBaseContracts": [
                116
              ],
              "name": "SelfPermit",
              "nameLocation": "570:10:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1427:82:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1450:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1450:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 70,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1470:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SelfPermit_$116",
                                    "typeString": "contract SelfPermit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SelfPermit_$116",
                                    "typeString": "contract SelfPermit"
                                  }
                                ],
                                "id": 69,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1462:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 68,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1462:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1462:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 72,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1477:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 73,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1484:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 74,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1494:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 75,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1497:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 76,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1500:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 63,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1437:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Permit_$41",
                                "typeString": "contract Permit"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "1437:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1437:65:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1437:65:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "587:668:1",
                    "text": "@notice Permits this contract to spend a given EIP-2612 `token` from `msg.sender`.\n @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\n @param token The address of the asset spent.\n @param value The amount permitted to spend.\n @param deadline The unix timestamp before which permit must be spent.\n @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\n @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\n @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`."
                  },
                  "functionSelector": "f3995c67",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermit",
                  "nameLocation": "1269:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1296:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Permit_$41",
                          "typeString": "contract Permit"
                        },
                        "typeName": {
                          "id": 49,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48,
                            "name": "Permit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41,
                            "src": "1289:6:1"
                          },
                          "referencedDeclaration": 41,
                          "src": "1289:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Permit_$41",
                            "typeString": "contract Permit"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1319:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1311:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1342:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1334:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1334:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1366:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1360:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1360:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1385:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1377:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1404:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1396:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1279:132:1"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1427:0:1"
                  },
                  "scope": 116,
                  "src": "1260:249:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "2366:88:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2389:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2389:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 104,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2409:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SelfPermit_$116",
                                    "typeString": "contract SelfPermit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SelfPermit_$116",
                                    "typeString": "contract SelfPermit"
                                  }
                                ],
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2401:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 102,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2401:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2401:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 106,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2416:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 107,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2423:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2433:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "id": 109,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2439:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 110,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "2442:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 111,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2445:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 97,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "2376:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Permit_$41",
                                "typeString": "contract Permit"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "2376:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,bool,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2376:71:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "2376:71:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "1515:672:1",
                    "text": "@notice Permits this contract to spend a given Dai-style `token` from `msg.sender`.\n @dev The `owner` is always `msg.sender` and the `spender` is always `address(this)`.\n @param token The address of the asset spent.\n @param nonce The current nonce of the `owner`.\n @param deadline The unix timestamp before which permit must be spent.\n @param v Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `s`.\n @param r Must produce valid secp256k1 signature from the `msg.sender` along with `v` and `s`.\n @param s Must produce valid secp256k1 signature from the `msg.sender` along with `r` and `v`."
                  },
                  "functionSelector": "4659a494",
                  "id": 115,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermitAllowed",
                  "nameLocation": "2201:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2235:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2228:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Permit_$41",
                          "typeString": "contract Permit"
                        },
                        "typeName": {
                          "id": 83,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 82,
                            "name": "Permit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41,
                            "src": "2228:6:1"
                          },
                          "referencedDeclaration": 41,
                          "src": "2228:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Permit_$41",
                            "typeString": "contract Permit"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "2258:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2250:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2250:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 88,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2281:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2273:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2273:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "2305:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2299:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2299:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2324:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2316:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2343:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "2335:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2335:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2218:132:1"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2366:0:1"
                  },
                  "scope": 116,
                  "src": "2192:262:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 117,
              "src": "552:1904:1",
              "usedErrors": []
            }
          ],
          "src": "32:2425:1"
        },
        "id": 1
      }
    }
  }
}
