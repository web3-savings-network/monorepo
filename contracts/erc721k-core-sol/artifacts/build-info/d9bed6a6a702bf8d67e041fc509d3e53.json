{
  "id": "d9bed6a6a702bf8d67e041fc509d3e53",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Solbase/utils/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Interface for contracts with ERC165 support.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\nabstract contract ERC165 {\n    function supportsInterface(bytes4 interfaceId) external view virtual returns (bool);\n}\n"
      },
      "contracts/Solbase/utils/LibERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {ERC165} from \"./ERC165.sol\";\n\n/// @notice Library used to query support of an interface declared via ERC165.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol)\n/// @dev Note that these functions return the actual result of the query: they do not\n/// revert if an interface is not supported. It is up to the caller to decide\n/// what to do in these cases.\nlibrary LibERC165 {\n    /// @dev As per the ERC165 spec, no interface should ever match `0xffffffff`.\n    bytes4 internal constant INTERFACE_ID_INVALID = 0xffffffff;\n\n    /// @dev Returns true if `account` supports the ERC165 interface.\n    function supportsERC165(address account) internal view returns (bool) {\n        return\n            supportsERC165InterfaceUnchecked(account, type(ERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, INTERFACE_ID_INVALID);\n    }\n\n    /// @dev Returns true if `account` supports the interface defined by\n    /// `interfaceId`. Support for ERC165 itself is queried automatically.\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /// @notice Query if a contract implements an interface - does not check ERC165 support.\n    /// @param account The address of the contract to query for support of an interface.\n    /// @param interfaceId The interface identifier, as specified in ERC165.\n    /// @return true if the contract at account indicates support of the interface with\n    /// identifier `interfaceId` - false otherwise.\n    /// @dev Assumes that `account` contains a contract that supports ERC165, otherwise\n    /// the behavior of this method is undefined. This precondition can be checked\n    /// with {supportsERC165}.\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // Prepare call.\n        bytes memory encodedParams = abi.encodeWithSelector(ERC165.supportsInterface.selector, interfaceId);\n\n        // Perform static call.\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue != 0;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Solbase/utils/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for contracts with ERC165 support.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Interface for contracts with ERC165 support.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\\nabstract contract ERC165 {\\n    function supportsInterface(bytes4 interfaceId) external view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x9f4e5bfe136feac34888c2f905a92650191bff0317e7e586f33f61b1032232a0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Interface for contracts with ERC165 support.",
            "version": 1
          }
        }
      },
      "contracts/Solbase/utils/LibERC165.sol": {
        "LibERC165": {
          "abi": [],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol)",
            "details": "Note that these functions return the actual result of the query: they do not revert if an interface is not supported. It is up to the caller to decide what to do in these cases.",
            "kind": "dev",
            "methods": {},
            "stateVariables": {
              "INTERFACE_ID_INVALID": {
                "details": "As per the ERC165 spec, no interface should ever match `0xffffffff`."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220385cbb94b0404a4ff127d3141511b30a3f03430d9445b1ea95770882a15aa2b864736f6c634300080f0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x5C 0xBB SWAP5 0xB0 BLOCKHASH 0x4A 0x4F CALL 0x27 0xD3 EQ ISZERO GT 0xB3 EXP EXTCODEHASH SUB NUMBER 0xD SWAP5 GASLIMIT 0xB1 0xEA SWAP6 PUSH24 0x882A15AA2B864736F6C634300080F003300000000000000 ",
              "sourceMap": "615:2105:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;615:2105:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220385cbb94b0404a4ff127d3141511b30a3f03430d9445b1ea95770882a15aa2b864736f6c634300080f0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x5C 0xBB SWAP5 0xB0 BLOCKHASH 0x4A 0x4F CALL 0x27 0xD3 EQ ISZERO GT 0xB3 EXP EXTCODEHASH SUB NUMBER 0xD SWAP5 GASLIMIT 0xB1 0xEA SWAP6 PUSH24 0x882A15AA2B864736F6C634300080F003300000000000000 ",
              "sourceMap": "615:2105:1:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "supportsERC165(address)": "infinite",
                "supportsERC165InterfaceUnchecked(address,bytes4)": "infinite",
                "supportsInterface(address,bytes4)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol)\",\"details\":\"Note that these functions return the actual result of the query: they do not revert if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"INTERFACE_ID_INVALID\":{\"details\":\"As per the ERC165 spec, no interface should ever match `0xffffffff`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library used to query support of an interface declared via ERC165.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/LibERC165.sol\":\"LibERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Interface for contracts with ERC165 support.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\\nabstract contract ERC165 {\\n    function supportsInterface(bytes4 interfaceId) external view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x9f4e5bfe136feac34888c2f905a92650191bff0317e7e586f33f61b1032232a0\",\"license\":\"MIT\"},\"contracts/Solbase/utils/LibERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ERC165} from \\\"./ERC165.sol\\\";\\n\\n/// @notice Library used to query support of an interface declared via ERC165.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol)\\n/// @dev Note that these functions return the actual result of the query: they do not\\n/// revert if an interface is not supported. It is up to the caller to decide\\n/// what to do in these cases.\\nlibrary LibERC165 {\\n    /// @dev As per the ERC165 spec, no interface should ever match `0xffffffff`.\\n    bytes4 internal constant INTERFACE_ID_INVALID = 0xffffffff;\\n\\n    /// @dev Returns true if `account` supports the ERC165 interface.\\n    function supportsERC165(address account) internal view returns (bool) {\\n        return\\n            supportsERC165InterfaceUnchecked(account, type(ERC165).interfaceId) &&\\n            !supportsERC165InterfaceUnchecked(account, INTERFACE_ID_INVALID);\\n    }\\n\\n    /// @dev Returns true if `account` supports the interface defined by\\n    /// `interfaceId`. Support for ERC165 itself is queried automatically.\\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\\n    }\\n\\n    /// @notice Query if a contract implements an interface - does not check ERC165 support.\\n    /// @param account The address of the contract to query for support of an interface.\\n    /// @param interfaceId The interface identifier, as specified in ERC165.\\n    /// @return true if the contract at account indicates support of the interface with\\n    /// identifier `interfaceId` - false otherwise.\\n    /// @dev Assumes that `account` contains a contract that supports ERC165, otherwise\\n    /// the behavior of this method is undefined. This precondition can be checked\\n    /// with {supportsERC165}.\\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // Prepare call.\\n        bytes memory encodedParams = abi.encodeWithSelector(ERC165.supportsInterface.selector, interfaceId);\\n\\n        // Perform static call.\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n\\n        assembly {\\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0x00)\\n        }\\n\\n        return success && returnSize >= 0x20 && returnValue != 0;\\n    }\\n}\\n\",\"keccak256\":\"0x0a32a2d13b69a269bf9e2d998875407427bb4d8852095b1d119534e7b18b2f38\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Library used to query support of an interface declared via ERC165.",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/Solbase/utils/ERC165.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              10
            ]
          },
          "id": 11,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:147:0",
                "text": "@notice Interface for contracts with ERC165 support.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)"
              },
              "fullyImplemented": false,
              "id": 10,
              "linearizedBaseContracts": [
                10
              ],
              "name": "ERC165",
              "nameLocation": "222:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "01ffc9a7",
                  "id": 9,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "244:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "269:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 9,
                        "src": "262:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "262:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "261:20:0"
                  },
                  "returnParameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 9,
                        "src": "313:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "313:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "312:6:0"
                  },
                  "scope": 10,
                  "src": "235:84:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 11,
              "src": "204:117:0",
              "usedErrors": []
            }
          ],
          "src": "32:290:0"
        },
        "id": 0
      },
      "contracts/Solbase/utils/LibERC165.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/LibERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              10
            ],
            "LibERC165": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 12,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "contracts/Solbase/utils/ERC165.sol",
              "file": "./ERC165.sol",
              "id": 14,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 11,
              "src": "57:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 13,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "65:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "LibERC165",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 15,
                "nodeType": "StructuredDocumentation",
                "src": "95:520:1",
                "text": "@notice Library used to query support of an interface declared via ERC165.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/LibERC165.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol)\n @dev Note that these functions return the actual result of the query: they do not\n revert if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104
              ],
              "name": "LibERC165",
              "nameLocation": "623:9:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 16,
                    "nodeType": "StructuredDocumentation",
                    "src": "639:77:1",
                    "text": "@dev As per the ERC165 spec, no interface should ever match `0xffffffff`."
                  },
                  "id": 19,
                  "mutability": "constant",
                  "name": "INTERFACE_ID_INVALID",
                  "nameLocation": "746:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "721:58:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30786666666666666666",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "769:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "0xffffffff"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "926:183:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 28,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "988:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 30,
                                      "name": "ERC165",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "1002:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC165_$10_$",
                                        "typeString": "type(contract ERC165)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC165_$10_$",
                                        "typeString": "type(contract ERC165)"
                                      }
                                    ],
                                    "id": 29,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "997:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 31,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "997:12:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC165_$10",
                                    "typeString": "type(contract ERC165)"
                                  }
                                },
                                "id": 32,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "997:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 27,
                              "name": "supportsERC165InterfaceUnchecked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "955:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (address,bytes4) view returns (bool)"
                              }
                            },
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "955:67:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "1038:64:1",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 35,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22,
                                  "src": "1072:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 36,
                                  "name": "INTERFACE_ID_INVALID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "1081:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 34,
                                "name": "supportsERC165InterfaceUnchecked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "1039:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (address,bytes4) view returns (bool)"
                                }
                              },
                              "id": 37,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1039:63:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "955:147:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 26,
                        "id": 40,
                        "nodeType": "Return",
                        "src": "936:166:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 20,
                    "nodeType": "StructuredDocumentation",
                    "src": "786:65:1",
                    "text": "@dev Returns true if `account` supports the ERC165 interface."
                  },
                  "id": 42,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsERC165",
                  "nameLocation": "865:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "888:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "880:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "880:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "879:17:1"
                  },
                  "returnParameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "920:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "919:6:1"
                  },
                  "scope": 104,
                  "src": "856:253:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "1356:105:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 53,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "1388:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 52,
                              "name": "supportsERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1373:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1373:23:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 56,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "1433:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1442:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 55,
                              "name": "supportsERC165InterfaceUnchecked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "1400:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (address,bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1400:54:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1373:81:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 51,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "1366:88:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "1115:143:1",
                    "text": "@dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for ERC165 itself is queried automatically."
                  },
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "1272:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1298:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "1290:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "1314:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "1307:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1307:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1289:37:1"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "1350:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1349:6:1"
                  },
                  "scope": 104,
                  "src": "1263:198:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2176:542:1",
                    "statements": [
                      {
                        "assignments": [
                          73
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 73,
                            "mutability": "mutable",
                            "name": "encodedParams",
                            "nameLocation": "2224:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2211:26:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 72,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2211:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 76,
                                  "name": "ERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "2263:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC165_$10_$",
                                    "typeString": "type(contract ERC165)"
                                  }
                                },
                                "id": 77,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "supportsInterface",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9,
                                "src": "2263:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function ERC165.supportsInterface(bytes4) view returns (bool)"
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "2263:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 79,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "2298:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 74,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2240:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "2240:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2240:70:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2211:99:1"
                      },
                      {
                        "assignments": [
                          83
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 83,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2358:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2353:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2353:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 84,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2353:12:1"
                      },
                      {
                        "assignments": [
                          86
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "2383:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2375:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 85,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2375:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2375:18:1"
                      },
                      {
                        "assignments": [
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "2411:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2403:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2403:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 90,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2403:19:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2442:203:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2456:97:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2478:5:1",
                                    "type": "",
                                    "value": "30000"
                                  },
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "2485:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "encodedParams",
                                        "nodeType": "YulIdentifier",
                                        "src": "2498:13:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2513:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2494:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2494:24:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "encodedParams",
                                        "nodeType": "YulIdentifier",
                                        "src": "2526:13:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2520:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2520:20:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2542:4:1",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2548:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "staticcall",
                                  "nodeType": "YulIdentifier",
                                  "src": "2467:10:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2467:86:1"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nodeType": "YulIdentifier",
                                  "src": "2456:7:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2566:30:1",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2580:14:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2580:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2566:10:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2609:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2630:4:1",
                                    "type": "",
                                    "value": "0x00"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2624:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2624:11:1"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "2609:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 65,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2485:7:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 73,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2498:13:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 73,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2526:13:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 86,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2566:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 89,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2609:11:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 83,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2456:7:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 91,
                        "nodeType": "InlineAssembly",
                        "src": "2433:212:1"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 92,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2662:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 93,
                                "name": "returnSize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "2673:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30783230",
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2687:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "0x20"
                              },
                              "src": "2673:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2662:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 97,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "2695:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2710:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2695:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2662:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 101,
                        "nodeType": "Return",
                        "src": "2655:56:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "1467:596:1",
                    "text": "@notice Query if a contract implements an interface - does not check ERC165 support.\n @param account The address of the contract to query for support of an interface.\n @param interfaceId The interface identifier, as specified in ERC165.\n @return true if the contract at account indicates support of the interface with\n identifier `interfaceId` - false otherwise.\n @dev Assumes that `account` contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsERC165InterfaceUnchecked",
                  "nameLocation": "2077:32:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2118:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2110:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2110:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2134:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2127:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2127:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2109:37:1"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2170:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2170:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2169:6:1"
                  },
                  "scope": 104,
                  "src": "2068:650:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "615:2105:1",
              "usedErrors": []
            }
          ],
          "src": "32:2689:1"
        },
        "id": 1
      }
    }
  }
}
