{
  "id": "d6f269ada2a652ca416d86141ef03fba",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Solbase/utils/SafeMulticallable.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Contract that enables a single call to call multiple methods on itself.\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SafeMulticallable.sol)\n/// @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/Multicallable.sol)\n/// @dev This version of Multicallable removes `payable` `multicall()` to remove risk of double-spend vulnerabilities.\nabstract contract SafeMulticallable {\n    function multicall(bytes[] calldata data) public virtual returns (bytes[] memory results) {\n        assembly {\n            if data.length {\n                results := mload(0x40) // Point `results` to start of free memory.\n                mstore(results, data.length) // Store `data.length` into `results`.\n                results := add(results, 0x20)\n\n                // `shl` 5 is equivalent to multiplying by 0x20.\n                let end := shl(5, data.length)\n                // Copy the offsets from calldata into memory.\n                calldatacopy(results, data.offset, end)\n                // Pointer to the top of the memory (i.e. start of the free memory).\n                let memPtr := add(results, end)\n                end := add(results, end)\n\n                // prettier-ignore\n                for {} 1 {} {\n                    // The offset of the current bytes in the calldata.\n                    let o := add(data.offset, mload(results))\n                    // Copy the current bytes from calldata to the memory.\n                    calldatacopy(\n                        memPtr,\n                        add(o, 0x20), // The offset of the current bytes' bytes.\n                        calldataload(o) // The length of the current bytes.\n                    )\n                    if iszero(delegatecall(gas(), address(), memPtr, calldataload(o), 0x00, 0x00)) {\n                        // Bubble up the revert if the delegatecall reverts.\n                        returndatacopy(0x00, 0x00, returndatasize())\n                        revert(0x00, returndatasize())\n                    }\n                    // Append the current `memPtr` into `results`.\n                    mstore(results, memPtr)\n                    results := add(results, 0x20)\n                    // Append the `returndatasize()`, and the return data.\n                    mstore(memPtr, returndatasize())\n                    returndatacopy(add(memPtr, 0x20), 0x00, returndatasize())\n                    // Advance the `memPtr` by `returndatasize() + 0x20`,\n                    // rounded up to the next multiple of 32.\n                    memPtr := and(add(add(memPtr, returndatasize()), 0x3f), 0xffffffffffffffe0)\n                    // prettier-ignore\n                    if iszero(lt(results, end)) { break }\n                }\n                // Restore `results` and allocate memory for it.\n                results := mload(0x40)\n                mstore(0x40, memPtr)\n            }\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Solbase/utils/SafeMulticallable.sol": {
        "SafeMulticallable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SafeMulticallable.sol)Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/Multicallable.sol)",
            "details": "This version of Multicallable removes `payable` `multicall()` to remove risk of double-spend vulnerabilities.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "multicall(bytes[])": "ac9650d8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SafeMulticallable.sol)Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/Multicallable.sol)\",\"details\":\"This version of Multicallable removes `payable` `multicall()` to remove risk of double-spend vulnerabilities.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract that enables a single call to call multiple methods on itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Solbase/utils/SafeMulticallable.sol\":\"SafeMulticallable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Solbase/utils/SafeMulticallable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Contract that enables a single call to call multiple methods on itself.\\n/// @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SafeMulticallable.sol)\\n/// @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/Multicallable.sol)\\n/// @dev This version of Multicallable removes `payable` `multicall()` to remove risk of double-spend vulnerabilities.\\nabstract contract SafeMulticallable {\\n    function multicall(bytes[] calldata data) public virtual returns (bytes[] memory results) {\\n        assembly {\\n            if data.length {\\n                results := mload(0x40) // Point `results` to start of free memory.\\n                mstore(results, data.length) // Store `data.length` into `results`.\\n                results := add(results, 0x20)\\n\\n                // `shl` 5 is equivalent to multiplying by 0x20.\\n                let end := shl(5, data.length)\\n                // Copy the offsets from calldata into memory.\\n                calldatacopy(results, data.offset, end)\\n                // Pointer to the top of the memory (i.e. start of the free memory).\\n                let memPtr := add(results, end)\\n                end := add(results, end)\\n\\n                // prettier-ignore\\n                for {} 1 {} {\\n                    // The offset of the current bytes in the calldata.\\n                    let o := add(data.offset, mload(results))\\n                    // Copy the current bytes from calldata to the memory.\\n                    calldatacopy(\\n                        memPtr,\\n                        add(o, 0x20), // The offset of the current bytes' bytes.\\n                        calldataload(o) // The length of the current bytes.\\n                    )\\n                    if iszero(delegatecall(gas(), address(), memPtr, calldataload(o), 0x00, 0x00)) {\\n                        // Bubble up the revert if the delegatecall reverts.\\n                        returndatacopy(0x00, 0x00, returndatasize())\\n                        revert(0x00, returndatasize())\\n                    }\\n                    // Append the current `memPtr` into `results`.\\n                    mstore(results, memPtr)\\n                    results := add(results, 0x20)\\n                    // Append the `returndatasize()`, and the return data.\\n                    mstore(memPtr, returndatasize())\\n                    returndatacopy(add(memPtr, 0x20), 0x00, returndatasize())\\n                    // Advance the `memPtr` by `returndatasize() + 0x20`,\\n                    // rounded up to the next multiple of 32.\\n                    memPtr := and(add(add(memPtr, returndatasize()), 0x3f), 0xffffffffffffffe0)\\n                    // prettier-ignore\\n                    if iszero(lt(results, end)) { break }\\n                }\\n                // Restore `results` and allocate memory for it.\\n                results := mload(0x40)\\n                mstore(0x40, memPtr)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x45d81399479c86b32839b5ec6f816f084dfaf0214c1676cdd93e3b3a354f5667\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Contract that enables a single call to call multiple methods on itself.",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/Solbase/utils/SafeMulticallable.sol": {
        "ast": {
          "absolutePath": "contracts/Solbase/utils/SafeMulticallable.sol",
          "exportedSymbols": {
            "SafeMulticallable": [
              14
            ]
          },
          "id": 15,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "SafeMulticallable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:411:0",
                "text": "@notice Contract that enables a single call to call multiple methods on itself.\n @author SolDAO (https://github.com/Sol-DAO/solbase/blob/main/src/utils/SafeMulticallable.sol)\n @author Modified from Solady (https://github.com/vectorized/solady/blob/main/src/utils/Multicallable.sol)\n @dev This version of Multicallable removes `payable` `multicall()` to remove risk of double-spend vulnerabilities."
              },
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "SafeMulticallable",
              "nameLocation": "486:17:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "600:2397:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "619:2372:0",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "648:2333:0",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "666:22:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "683:4:0",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "677:5:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "677:11:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "results",
                                        "nodeType": "YulIdentifier",
                                        "src": "666:7:0"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "results",
                                          "nodeType": "YulIdentifier",
                                          "src": "756:7:0"
                                        },
                                        {
                                          "name": "data.length",
                                          "nodeType": "YulIdentifier",
                                          "src": "765:11:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "749:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "749:28:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "749:28:0"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "833:29:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "results",
                                          "nodeType": "YulIdentifier",
                                          "src": "848:7:0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "857:4:0",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "844:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "844:18:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "results",
                                        "nodeType": "YulIdentifier",
                                        "src": "833:7:0"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "945:30:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "960:1:0",
                                          "type": "",
                                          "value": "5"
                                        },
                                        {
                                          "name": "data.length",
                                          "nodeType": "YulIdentifier",
                                          "src": "963:11:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "956:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "956:19:0"
                                    },
                                    "variables": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulTypedName",
                                        "src": "949:3:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "results",
                                          "nodeType": "YulIdentifier",
                                          "src": "1068:7:0"
                                        },
                                        {
                                          "name": "data.offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "1077:11:0"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "1090:3:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "1055:12:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1055:39:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1055:39:0"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1196:31:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "results",
                                          "nodeType": "YulIdentifier",
                                          "src": "1214:7:0"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "1223:3:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1210:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1210:17:0"
                                    },
                                    "variables": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "1200:6:0",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1244:24:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "results",
                                          "nodeType": "YulIdentifier",
                                          "src": "1255:7:0"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "1264:3:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1251:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1251:17:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1244:3:0"
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1333:1493:0",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "1427:41:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "data.offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "1440:11:0"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "results",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1459:7:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1453:5:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1453:14:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1436:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1436:32:0"
                                          },
                                          "variables": [
                                            {
                                              "name": "o",
                                              "nodeType": "YulTypedName",
                                              "src": "1431:1:0",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "memPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "1602:6:0"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "o",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1638:1:0"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1641:4:0",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1634:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1634:12:0"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "o",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1728:1:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "calldataload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1715:12:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1715:15:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "calldatacopy",
                                              "nodeType": "YulIdentifier",
                                              "src": "1564:12:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1564:224:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1564:224:0"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "1888:224:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2006:4:0",
                                                      "type": "",
                                                      "value": "0x00"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2012:4:0",
                                                      "type": "",
                                                      "value": "0x00"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2018:14:0"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "2018:16:0"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1991:14:0"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1991:44:0"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "1991:44:0"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2067:4:0",
                                                      "type": "",
                                                      "value": "0x00"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2073:14:0"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "2073:16:0"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2060:6:0"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2060:30:0"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "2060:30:0"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "gas",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1832:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1832:5:0"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "address",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1839:7:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1839:9:0"
                                                  },
                                                  {
                                                    "name": "memPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1850:6:0"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "o",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1871:1:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "calldataload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1858:12:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1858:15:0"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1875:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1881:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "delegatecall",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1819:12:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1819:67:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "1812:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1812:75:0"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "1809:303:0"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "results",
                                                "nodeType": "YulIdentifier",
                                                "src": "2207:7:0"
                                              },
                                              {
                                                "name": "memPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "2216:6:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "2200:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2200:23:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2200:23:0"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2244:29:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "results",
                                                "nodeType": "YulIdentifier",
                                                "src": "2259:7:0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2268:4:0",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2255:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2255:18:0"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "results",
                                              "nodeType": "YulIdentifier",
                                              "src": "2244:7:0"
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "memPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "2376:6:0"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2384:14:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2384:16:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "2369:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2369:32:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2369:32:0"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "memPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2441:6:0"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2449:4:0",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2437:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2437:17:0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2456:4:0",
                                                "type": "",
                                                "value": "0x00"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2462:14:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2462:16:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "returndatacopy",
                                              "nodeType": "YulIdentifier",
                                              "src": "2422:14:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2422:57:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2422:57:0"
                                        },
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "2636:75:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "memPtr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2658:6:0"
                                                      },
                                                      {
                                                        "arguments": [],
                                                        "functionName": {
                                                          "name": "returndatasize",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2666:14:0"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2666:16:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2654:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2654:29:0"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2685:4:0",
                                                    "type": "",
                                                    "value": "0x3f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2650:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2650:40:0"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2692:18:0",
                                                "type": "",
                                                "value": "0xffffffffffffffe0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "2646:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2646:65:0"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "memPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2636:6:0"
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "2799:9:0",
                                            "statements": [
                                              {
                                                "nodeType": "YulBreak",
                                                "src": "2801:5:0"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "results",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2784:7:0"
                                                  },
                                                  {
                                                    "name": "end",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2793:3:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "lt",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2781:2:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2781:16:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2774:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2774:24:0"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "2771:37:0"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1328:1:0",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "1330:2:0",
                                      "statements": []
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "1325:2:0",
                                      "statements": []
                                    },
                                    "src": "1321:1505:0"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2908:22:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2925:4:0",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2919:5:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2919:11:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "results",
                                        "nodeType": "YulIdentifier",
                                        "src": "2908:7:0"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2954:4:0",
                                          "type": "",
                                          "value": "0x40"
                                        },
                                        {
                                          "name": "memPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2960:6:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2947:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2947:20:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2947:20:0"
                                  }
                                ]
                              },
                              "condition": {
                                "name": "data.length",
                                "nodeType": "YulIdentifier",
                                "src": "636:11:0"
                              },
                              "nodeType": "YulIf",
                              "src": "633:2348:0"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 5,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "636:11:0",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 5,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "765:11:0",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 5,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "963:11:0",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 5,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "1077:11:0",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 5,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "1440:11:0",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1068:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1214:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1255:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1459:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2207:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2244:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2259:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2784:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2908:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "666:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "756:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "833:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "848:7:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 11,
                        "nodeType": "InlineAssembly",
                        "src": "610:2381:0"
                      }
                    ]
                  },
                  "functionSelector": "ac9650d8",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multicall",
                  "nameLocation": "519:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "546:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "529:21:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "529:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 4,
                          "nodeType": "ArrayTypeName",
                          "src": "529:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "528:23:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "results",
                        "nameLocation": "591:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "576:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 7,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "576:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 8,
                          "nodeType": "ArrayTypeName",
                          "src": "576:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "575:24:0"
                  },
                  "scope": 14,
                  "src": "510:2487:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 15,
              "src": "468:2531:0",
              "usedErrors": []
            }
          ],
          "src": "32:2968:0"
        },
        "id": 0
      }
    }
  }
}
