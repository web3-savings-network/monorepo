/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoolyMorph, PoolyMorphInterface } from "../PoolyMorph";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "ERC721StorageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getERC721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "preview",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Storage",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b6838038062001b688339810160408190526200003491620001c2565b82828282826000620000478382620002de565b506001620000568282620002de565b505050620000736200006d6200009f60201b60201c565b620000a3565b600880546001600160a01b0319166001600160a01b039290921691909117905550620003aa9350505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011d57600080fd5b81516001600160401b03808211156200013a576200013a620000f5565b604051601f8301601f19908116603f01168101908282118183101715620001655762000165620000f5565b816040528381526020925086838588010111156200018257600080fd5b600091505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b85760008385830101525b9695505050505050565b600080600060608486031215620001d857600080fd5b83516001600160401b0380821115620001f057600080fd5b620001fe878388016200010b565b945060208601519150808211156200021557600080fd5b5062000224868287016200010b565b604086015190935090506001600160a01b03811681146200024457600080fd5b809150509250925092565b600181811c908216806200026457607f821691505b6020821081036200028557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d957600081815260208120601f850160051c81016020861015620002b45750805b601f850160051c820191505b81811015620002d557828155600101620002c0565b5050505b505050565b81516001600160401b03811115620002fa57620002fa620000f5565b62000312816200030b84546200024f565b846200028b565b602080601f8311600181146200034a5760008415620003315750858301515b600019600386901b1c1916600185901b178555620002d5565b600085815260208120601f198616915b828110156200037b578886015182559484019460019091019084016200035a565b50858210156200039a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6117ae80620003ba6000396000f3fe6080604052600436106101405760003560e01c806370a08231116100b6578063a22cb4651161006f578063a22cb46514610371578063b88d4fde14610391578063c87b56dd146103b1578063e8a3d485146103d1578063e985e9c5146103e6578063f2fde38b1461042f57600080fd5b806370a08231146102cb578063715018a6146102eb57806387a89ee6146103005780638da5cb5b1461031e5780639137c1a71461033c57806395d89b411461035c57600080fd5b806318160ddd1161010857806318160ddd1461022457806323b872dd146102435780632f54bf6e1461026357806342842e0e146102835780634e71d92d146102a35780636352211e146102ab57600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101d457806313a69df9146101f6575b600080fd5b34801561015157600080fd5b506101656101603660046112c4565b61044f565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f610460565b6040516101719190611340565b3480156101a857600080fd5b506101bc6101b7366004611353565b6104f2565b6040516001600160a01b039091168152602001610171565b3480156101e057600080fd5b506101f46101ef366004611388565b610519565b005b34801561020257600080fd5b5061018f6102113660046113b2565b5060408051602081019091526000815290565b34801561023057600080fd5b506007545b604051908152602001610171565b34801561024f57600080fd5b506101f461025e3660046113cd565b610633565b34801561026f57600080fd5b5061016561027e3660046113b2565b6106ba565b34801561028f57600080fd5b506101f461029e3660046113cd565b6106e6565b6101f4610701565b3480156102b757600080fd5b506101bc6102c6366004611353565b61070c565b3480156102d757600080fd5b506102356102e63660046113b2565b61076c565b3480156102f757600080fd5b506101f46107f2565b34801561030c57600080fd5b506008546001600160a01b03166101bc565b34801561032a57600080fd5b506006546001600160a01b03166101bc565b34801561034857600080fd5b506101f46103573660046113b2565b610804565b34801561036857600080fd5b5061018f610860565b34801561037d57600080fd5b506101f461038c366004611409565b61086f565b34801561039d57600080fd5b506101f46103ac3660046114b4565b61087e565b3480156103bd57600080fd5b5061018f6103cc366004611353565b6108f7565b3480156103dd57600080fd5b5061018f61098a565b3480156103f257600080fd5b5061016561040136600461155f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561043b57600080fd5b506101f461044a3660046113b2565b610a01565b600061045a82610a7a565b92915050565b60606000805461046f90611592565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611592565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b5050505050905090565b60006104fd82610aca565b506000908152600460205260409020546001600160a01b031690565b60006105248261070c565b9050806001600160a01b0316836001600160a01b0316036105965760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105b257506105b28133610401565b6106245760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161058d565b61062e8383610b29565b505050565b6001600160a01b0383166106645761065e82600760008154610654906115e2565b9182905550610b97565b50505050565b61066d8261076c565b1561062e5760405162461bcd60e51b815260206004820152601960248201527f506f6f6c794d6f7270683a63757272656e742d686f6c64657200000000000000604482015260640161058d565b6001600160a01b0381166000908152600960205260408120546106de57600061045a565b600192915050565b61062e8383836040518060200160405280600081525061087e565b61070a33610bc4565b565b6000818152600260205260408120546001600160a01b03168061045a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058d565b60006001600160a01b0382166107d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161058d565b506001600160a01b031660009081526003602052604090205490565b6107fa610c2b565b61070a6000610c85565b61080c610c2b565b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527fd833c7cea3bce2562e201bf7e85016d0bc1173580c719f63378cc5d0457552b69060200160405180910390a150565b60606001805461046f90611592565b61087a338383610cd7565b5050565b6108883383610da5565b6108eb5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161058d565b61065e84848484610e23565b606060008061090584610e56565b600854604051637833cb0b60e11b81529294509092506001600160a01b03169063f06796169061093d908790869086906004016115fb565b600060405180830381865afa15801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109829190810190611630565b949350505050565b60085460408051631c97e82760e21b815290516060926001600160a01b03169163725fa09c9160048083019260009291908290030181865afa1580156109d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109fc9190810190611630565b905090565b610a09610c2b565b6001600160a01b038116610a6e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058d565b610a7781610c85565b50565b60006001600160e01b031982166380ac58cd60e01b1480610aab57506001600160e01b03198216635b5e139f60e01b145b8061045a57506301ffc9a760e01b6001600160e01b031983161461045a565b6000818152600260205260409020546001600160a01b0316610a775760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b5e8261070c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ba38383610ecf565b506001600160a01b0391909116600090815260096020526040902081905590565b610bcd8161076c565b600003610bea57600780546001019081905561087a908290610b97565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb1e535bdc9c1a0e9c1c995d8b5a5cdcdd595960521b604482015260640161058d565b6006546001600160a01b0316331461070a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058d565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610d385760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600080610db18361070c565b9050806001600160a01b0316846001600160a01b03161480610df857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109825750836001600160a01b0316610e11846104f2565b6001600160a01b031614949350505050565b610e2e848484611011565b610e3a848484846111ad565b61065e5760405162461bcd60e51b815260040161058d906116a7565b6060806000604051602001610e829060208082526003908201526203078360ec1b604082015260600190565b60405160208183030381529060405290506000610e9e8561070c565b604080516001600160a01b0390921660208301520160408051601f1981840301815291905291959194509092505050565b6001600160a01b038216610f255760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058d565b6000818152600260205260409020546001600160a01b031615610f8a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058d565b6001600160a01b0382166000908152600360205260408120805460019290610fb39084906116f9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b826001600160a01b03166110248261070c565b6001600160a01b0316146110885760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058d565b6001600160a01b0382166110ea5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058d565b6110f5600082610b29565b6001600160a01b038316600090815260036020526040812080546001929061111e908490611711565b90915550506001600160a01b038216600090815260036020526040812080546001929061114c9084906116f9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b156112a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111f1903390899088908890600401611728565b6020604051808303816000875af192505050801561122c575060408051601f3d908101601f191682019092526112299181019061175b565b60015b611289573d80801561125a576040519150601f19603f3d011682016040523d82523d6000602084013e61125f565b606091505b5080516000036112815760405162461bcd60e51b815260040161058d906116a7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610982565b506001949350505050565b6001600160e01b031981168114610a7757600080fd5b6000602082840312156112d657600080fd5b81356112e1816112ae565b9392505050565b60005b838110156113035781810151838201526020016112eb565b8381111561065e5750506000910152565b6000815180845261132c8160208601602086016112e8565b601f01601f19169290920160200192915050565b6020815260006112e16020830184611314565b60006020828403121561136557600080fd5b5035919050565b80356001600160a01b038116811461138357600080fd5b919050565b6000806040838503121561139b57600080fd5b6113a48361136c565b946020939093013593505050565b6000602082840312156113c457600080fd5b6112e18261136c565b6000806000606084860312156113e257600080fd5b6113eb8461136c565b92506113f96020850161136c565b9150604084013590509250925092565b6000806040838503121561141c57600080fd5b6114258361136c565b91506020830135801515811461143a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561148457611484611445565b604052919050565b600067ffffffffffffffff8211156114a6576114a6611445565b50601f01601f191660200190565b600080600080608085870312156114ca57600080fd5b6114d38561136c565b93506114e16020860161136c565b925060408501359150606085013567ffffffffffffffff81111561150457600080fd5b8501601f8101871361151557600080fd5b80356115286115238261148c565b61145b565b81815288602083850101111561153d57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561157257600080fd5b61157b8361136c565b91506115896020840161136c565b90509250929050565b600181811c908216806115a657607f821691505b6020821081036115c657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016115f4576115f46115cc565b5060010190565b8381526060602082015260006116146060830185611314565b82810360408401526116268185611314565b9695505050505050565b60006020828403121561164257600080fd5b815167ffffffffffffffff81111561165957600080fd5b8201601f8101841361166a57600080fd5b80516116786115238261148c565b81815285602083850101111561168d57600080fd5b61169e8260208301602086016112e8565b95945050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000821982111561170c5761170c6115cc565b500190565b600082821015611723576117236115cc565b500390565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061162690830184611314565b60006020828403121561176d57600080fd5b81516112e1816112ae56fea26469706673582212200403322134207c2d5c2472e304cb39505fa17f431c13a016e22be5ef0b9af3b164736f6c634300080f0033";

type PoolyMorphConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolyMorphConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolyMorph__factory extends ContractFactory {
  constructor(...args: PoolyMorphConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PoolyMorph";
  }

  deploy(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolyMorph> {
    return super.deploy(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    ) as Promise<PoolyMorph>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    erc721Storage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      erc721Storage,
      overrides || {}
    );
  }
  attach(address: string): PoolyMorph {
    return super.attach(address) as PoolyMorph;
  }
  connect(signer: Signer): PoolyMorph__factory {
    return super.connect(signer) as PoolyMorph__factory;
  }
  static readonly contractName: "PoolyMorph";
  public readonly contractName: "PoolyMorph";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolyMorphInterface {
    return new utils.Interface(_abi) as PoolyMorphInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolyMorph {
    return new Contract(address, _abi, signerOrProvider) as PoolyMorph;
  }
}
