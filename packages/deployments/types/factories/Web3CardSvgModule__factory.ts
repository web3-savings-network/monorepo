/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Web3CardSvgModule,
  Web3CardSvgModuleInterface,
} from "../Web3CardSvgModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "svgLibrary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "element",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "position",
        type: "uint8",
      },
    ],
    name: "getElement",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncoding",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "render",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "element",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "position",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "svg",
        type: "string",
      },
    ],
    name: "setElement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600781526020017f2875696e74382900000000000000000000000000000000000000000000000000815250600290816200004a91906200042c565b503480156200005857600080fd5b50604051620014b6380380620014b683398181016040528101906200007e91906200057d565b6200009e62000092620000e660201b60201c565b620000ee60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005af565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200023457607f821691505b6020821081036200024a5762000249620001ec565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000275565b620002c0868362000275565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200030d620003076200030184620002d8565b620002e2565b620002d8565b9050919050565b6000819050919050565b6200032983620002ec565b62000341620003388262000314565b84845462000282565b825550505050565b600090565b6200035862000349565b620003658184846200031e565b505050565b5b818110156200038d57620003816000826200034e565b6001810190506200036b565b5050565b601f821115620003dc57620003a68162000250565b620003b18462000265565b81016020851015620003c1578190505b620003d9620003d08562000265565b8301826200036a565b50505b505050565b600082821c905092915050565b60006200040160001984600802620003e1565b1980831691505092915050565b60006200041c8383620003ee565b9150826002028217905092915050565b6200043782620001b2565b67ffffffffffffffff811115620004535762000452620001bd565b5b6200045f82546200021b565b6200046c82828562000391565b600060209050601f831160018114620004a457600084156200048f578287015190505b6200049b85826200040e565b8655506200050b565b601f198416620004b48662000250565b60005b82811015620004de57848901518255600182019150602085019450602081019050620004b7565b86831015620004fe5784890151620004fa601f891682620003ee565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005458262000518565b9050919050565b620005578162000538565b81146200056357600080fd5b50565b60008151905062000577816200054c565b92915050565b60006020828403121562000596576200059562000513565b5b6000620005a68482850162000566565b91505092915050565b610ef780620005bf6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638c4fb8051161005b5780638c4fb805146100ec5780638da5cb5b14610108578063b1cd921f14610126578063f2fde38b146101445761007d565b80631b4aa87314610082578063316df61e146100b2578063715018a6146100e2575b600080fd5b61009c60048036038101906100979190610648565b610160565b6040516100a99190610721565b60405180910390f35b6100cc60048036038101906100c79190610878565b610223565b6040516100d99190610721565b60405180910390f35b6100ea610235565b005b61010660048036038101906101019190610962565b610249565b005b610110610294565b60405161011d9190610a12565b60405180910390f35b61012e6102bd565b60405161013b9190610721565b60405180910390f35b61015e60048036038101906101599190610a59565b61034f565b005b6060600360008460ff1660ff16815260200190815260200160002060008360ff1660ff168152602001908152602001600020805461019d90610ab5565b80601f01602080910402602001604051908101604052809291908181526020018280546101c990610ab5565b80156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b5050505050905092915050565b606061022e826103d2565b9050919050565b61023d6104b1565b610247600061052f565b565b6102516104b1565b80600360008560ff1660ff16815260200190815260200160002060008460ff1660ff168152602001908152602001600020908161028e9190610c9c565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600280546102cc90610ab5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610ab5565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b6103576104b1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610de0565b60405180910390fd5b6103cf8161052f565b50565b6060600080838060200190518101906103eb9190610e15565b91509150600360008360ff1660ff16815260200190815260200160002060008260ff1660ff168152602001908152602001600020805461042a90610ab5565b80601f016020809104026020016040519081016040528092919081815260200182805461045690610ab5565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b505050505092505050919050565b6104b96105f3565b73ffffffffffffffffffffffffffffffffffffffff166104d7610294565b73ffffffffffffffffffffffffffffffffffffffff161461052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610ea1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b6106258161060f565b811461063057600080fd5b50565b6000813590506106428161061c565b92915050565b6000806040838503121561065f5761065e610605565b5b600061066d85828601610633565b925050602061067e85828601610633565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106c25780820151818401526020810190506106a7565b838111156106d1576000848401525b50505050565b6000601f19601f8301169050919050565b60006106f382610688565b6106fd8185610693565b935061070d8185602086016106a4565b610716816106d7565b840191505092915050565b6000602082019050818103600083015261073b81846106e8565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610785826106d7565b810181811067ffffffffffffffff821117156107a4576107a361074d565b5b80604052505050565b60006107b76105fb565b90506107c3828261077c565b919050565b600067ffffffffffffffff8211156107e3576107e261074d565b5b6107ec826106d7565b9050602081019050919050565b82818337600083830152505050565b600061081b610816846107c8565b6107ad565b90508281526020810184848401111561083757610836610748565b5b6108428482856107f9565b509392505050565b600082601f83011261085f5761085e610743565b5b813561086f848260208601610808565b91505092915050565b60006020828403121561088e5761088d610605565b5b600082013567ffffffffffffffff8111156108ac576108ab61060a565b5b6108b88482850161084a565b91505092915050565b600067ffffffffffffffff8211156108dc576108db61074d565b5b6108e5826106d7565b9050602081019050919050565b6000610905610900846108c1565b6107ad565b90508281526020810184848401111561092157610920610748565b5b61092c8482856107f9565b509392505050565b600082601f83011261094957610948610743565b5b81356109598482602086016108f2565b91505092915050565b60008060006060848603121561097b5761097a610605565b5b600061098986828701610633565b935050602061099a86828701610633565b925050604084013567ffffffffffffffff8111156109bb576109ba61060a565b5b6109c786828701610934565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109fc826109d1565b9050919050565b610a0c816109f1565b82525050565b6000602082019050610a276000830184610a03565b92915050565b610a36816109f1565b8114610a4157600080fd5b50565b600081359050610a5381610a2d565b92915050565b600060208284031215610a6f57610a6e610605565b5b6000610a7d84828501610a44565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610acd57607f821691505b602082108103610ae057610adf610a86565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b0b565b610b528683610b0b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610b99610b94610b8f84610b6a565b610b74565b610b6a565b9050919050565b6000819050919050565b610bb383610b7e565b610bc7610bbf82610ba0565b848454610b18565b825550505050565b600090565b610bdc610bcf565b610be7818484610baa565b505050565b5b81811015610c0b57610c00600082610bd4565b600181019050610bed565b5050565b601f821115610c5057610c2181610ae6565b610c2a84610afb565b81016020851015610c39578190505b610c4d610c4585610afb565b830182610bec565b50505b505050565b600082821c905092915050565b6000610c7360001984600802610c55565b1980831691505092915050565b6000610c8c8383610c62565b9150826002028217905092915050565b610ca582610688565b67ffffffffffffffff811115610cbe57610cbd61074d565b5b610cc88254610ab5565b610cd3828285610c0f565b600060209050601f831160018114610d065760008415610cf4578287015190505b610cfe8582610c80565b865550610d66565b601f198416610d1486610ae6565b60005b82811015610d3c57848901518255600182019150602085019450602081019050610d17565b86831015610d595784890151610d55601f891682610c62565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610dca602683610693565b9150610dd582610d6e565b604082019050919050565b60006020820190508181036000830152610df981610dbd565b9050919050565b600081519050610e0f8161061c565b92915050565b60008060408385031215610e2c57610e2b610605565b5b6000610e3a85828601610e00565b9250506020610e4b85828601610e00565b9150509250929050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e8b602083610693565b9150610e9682610e55565b602082019050919050565b60006020820190508181036000830152610eba81610e7e565b905091905056fea26469706673582212209208f0a7bd1c31ecef5f4391c2788b556d1e7e26ae52b1cf6cb81cc756a37f2a64736f6c634300080f0033";

type Web3CardSvgModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3CardSvgModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3CardSvgModule__factory extends ContractFactory {
  constructor(...args: Web3CardSvgModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Web3CardSvgModule";
  }

  deploy(
    svgLibrary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Web3CardSvgModule> {
    return super.deploy(
      svgLibrary,
      overrides || {}
    ) as Promise<Web3CardSvgModule>;
  }
  getDeployTransaction(
    svgLibrary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(svgLibrary, overrides || {});
  }
  attach(address: string): Web3CardSvgModule {
    return super.attach(address) as Web3CardSvgModule;
  }
  connect(signer: Signer): Web3CardSvgModule__factory {
    return super.connect(signer) as Web3CardSvgModule__factory;
  }
  static readonly contractName: "Web3CardSvgModule";
  public readonly contractName: "Web3CardSvgModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3CardSvgModuleInterface {
    return new utils.Interface(_abi) as Web3CardSvgModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3CardSvgModule {
    return new Contract(address, _abi, signerOrProvider) as Web3CardSvgModule;
  }
}
