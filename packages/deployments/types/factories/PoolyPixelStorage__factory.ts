/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolyPixelStorage,
  PoolyPixelStorageInterface,
  ERC721Storage,
} from "../PoolyPixelStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_svgRender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "_traitsFetch_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        internalType: "struct ERC721Storage.ContractURI",
        name: "_contractURI_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ERC721Storage.ContractURI",
        name: "contractURI",
        type: "tuple",
      },
    ],
    name: "ContractURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "svgRender",
        type: "address",
      },
    ],
    name: "SvgRenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "traitsFetch",
        type: "address",
      },
    ],
    name: "TraitsFetchUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "constructContractURI",
    outputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input1",
        type: "bytes",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractDescription",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        internalType: "struct ERC721Storage.ContractURI",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSvgRender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTraitsFetch",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "render",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "string",
            name: "externalLink",
            type: "string",
          },
          {
            internalType: "string",
            name: "sellerFeeBasisPoints",
            type: "string",
          },
          {
            internalType: "string",
            name: "feeRecipient",
            type: "string",
          },
        ],
        internalType: "struct ERC721Storage.ContractURI",
        name: "contractURI",
        type: "tuple",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "svgRender",
        type: "address",
      },
    ],
    name: "setSvgRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "traitsFetch",
        type: "address",
      },
    ],
    name: "setTraitsFetch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type PoolyPixelStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolyPixelStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolyPixelStorage__factory extends ContractFactory {
  constructor(...args: PoolyPixelStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PoolyPixelStorage";
  }

  deploy(
    _svgRender_: string,
    _traitsFetch_: string,
    _contractURI_: ERC721Storage.ContractURIStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolyPixelStorage> {
    return super.deploy(
      _svgRender_,
      _traitsFetch_,
      _contractURI_,
      overrides || {}
    ) as Promise<PoolyPixelStorage>;
  }
  getDeployTransaction(
    _svgRender_: string,
    _traitsFetch_: string,
    _contractURI_: ERC721Storage.ContractURIStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _svgRender_,
      _traitsFetch_,
      _contractURI_,
      overrides || {}
    );
  }
  attach(address: string): PoolyPixelStorage {
    return super.attach(address) as PoolyPixelStorage;
  }
  connect(signer: Signer): PoolyPixelStorage__factory {
    return super.connect(signer) as PoolyPixelStorage__factory;
  }
  static readonly contractName: "PoolyPixelStorage";
  public readonly contractName: "PoolyPixelStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolyPixelStorageInterface {
    return new utils.Interface(_abi) as PoolyPixelStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolyPixelStorage {
    return new Contract(address, _abi, signerOrProvider) as PoolyPixelStorage;
  }
}
