/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Web3CardActivator,
  Web3CardActivatorInterface,
} from "../Web3CardActivator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721KInstance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "emoji",
        type: "uint8",
      },
    ],
    name: "activateWithStyle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721KDesignInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721KInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108b33803806108b38339818101604052810190610032919061017a565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101ba565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101478261011c565b9050919050565b6101578161013c565b811461016257600080fd5b50565b6000815190506101748161014e565b92915050565b6000806040838503121561019157610190610117565b5b600061019f85828601610165565b92505060206101b085828601610165565b9150509250929050565b6106ea806101c96000396000f3fe6080604052600436106100555760003560e01c80631c5a9d9c1461005a5780636795a874146100835780638da5cb5b146100ae578063a3df9447146100d9578063f009cec814610102578063f2fde38b1461012d575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610519565b610149565b005b34801561008f57600080fd5b506100986101eb565b6040516100a59190610555565b60405180910390f35b3480156100ba57600080fd5b506100c3610211565b6040516100d09190610555565b60405180910390f35b3480156100e557600080fd5b5061010060048036038101906100fb91906105a9565b610235565b005b34801561010e57600080fd5b5061011761036e565b6040516101249190610555565b60405180910390f35b61014760048036038101906101429190610519565b610394565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842826040518263ffffffff1660e01b81526004016101a49190610555565b6020604051808303816000875af11580156101c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e79190610632565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842856040518263ffffffff1660e01b81526004016102929190610555565b6020604051808303816000875af11580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610632565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b46e5ac68285856040518463ffffffff1660e01b81526004016103369392919061067d565b600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b5050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610419576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e6826104bb565b9050919050565b6104f6816104db565b811461050157600080fd5b50565b600081359050610513816104ed565b92915050565b60006020828403121561052f5761052e6104b6565b5b600061053d84828501610504565b91505092915050565b61054f816104db565b82525050565b600060208201905061056a6000830184610546565b92915050565b600060ff82169050919050565b61058681610570565b811461059157600080fd5b50565b6000813590506105a38161057d565b92915050565b6000806000606084860312156105c2576105c16104b6565b5b60006105d086828701610504565b93505060206105e186828701610594565b92505060406105f286828701610594565b9150509250925092565b6000819050919050565b61060f816105fc565b811461061a57600080fd5b50565b60008151905061062c81610606565b92915050565b600060208284031215610648576106476104b6565b5b60006106568482850161061d565b91505092915050565b610668816105fc565b82525050565b61067781610570565b82525050565b6000606082019050610692600083018661065f565b61069f602083018561066e565b6106ac604083018461066e565b94935050505056fea26469706673582212202b034ade5429f729de8aa771d2e716d4596290131504e90ceebe628aaf85f70964736f6c634300080f0033";

type Web3CardActivatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3CardActivatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3CardActivator__factory extends ContractFactory {
  constructor(...args: Web3CardActivatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Web3CardActivator";
  }

  deploy(
    admin: string,
    _erc721KInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Web3CardActivator> {
    return super.deploy(
      admin,
      _erc721KInstance,
      overrides || {}
    ) as Promise<Web3CardActivator>;
  }
  getDeployTransaction(
    admin: string,
    _erc721KInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(admin, _erc721KInstance, overrides || {});
  }
  attach(address: string): Web3CardActivator {
    return super.attach(address) as Web3CardActivator;
  }
  connect(signer: Signer): Web3CardActivator__factory {
    return super.connect(signer) as Web3CardActivator__factory;
  }
  static readonly contractName: "Web3CardActivator";
  public readonly contractName: "Web3CardActivator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3CardActivatorInterface {
    return new utils.Interface(_abi) as Web3CardActivatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3CardActivator {
    return new Contract(address, _abi, signerOrProvider) as Web3CardActivator;
  }
}
