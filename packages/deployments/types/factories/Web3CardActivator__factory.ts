/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Web3CardActivator,
  Web3CardActivatorInterface,
} from "../Web3CardActivator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721KInstance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721KDesignInstance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "emoji",
        type: "uint8",
      },
    ],
    name: "activateWithStyle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721KDesignInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721KInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setStyleUpgradeCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc1000060035534801561001b57600080fd5b50604051610dc1380380610dc1833981810160405281019061003d91906101c7565b82806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061021a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019482610169565b9050919050565b6101a481610189565b81146101af57600080fd5b50565b6000815190506101c18161019b565b92915050565b6000806000606084860312156101e0576101df610164565b5b60006101ee868287016101b2565b93505060206101ff868287016101b2565b9250506040610210868287016101b2565b9150509250925092565b610b98806102296000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610126578063a3df944714610151578063f009cec81461016d578063f2fde38b146101985761007b565b80631c5a9d9c1461008057806325eb5073146100a957806337bdc99b146100d25780636795a874146100fb575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906107a4565b6101b4565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190610807565b610256565b005b3480156100de57600080fd5b506100f960048036038101906100f49190610807565b6102e5565b005b34801561010757600080fd5b5061011061041a565b60405161011d9190610843565b60405180910390f35b34801561013257600080fd5b5061013b610440565b6040516101489190610843565b60405180910390f35b61016b60048036038101906101669190610897565b610464565b005b34801561017957600080fd5b506101826105f9565b60405161018f9190610843565b60405180910390f35b6101b260048036038101906101ad91906107a4565b61061f565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842826040518263ffffffff1660e01b815260040161020f9190610843565b6020604051808303816000875af115801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906108ff565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102db576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060038190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516103909061095d565b60006040518083038185875af1925050503d80600081146103cd576040519150601f19603f3d011682016040523d82523d6000602084013e6103d2565b606091505b5050905080610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d906109f5565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181836104729190610a44565b60ff16106104c0576003543410156104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690610aed565b60405180910390fd5b5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842856040518263ffffffff1660e01b815260040161051d9190610843565b6020604051808303816000875af115801561053c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056091906108ff565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cd5391e8285856040518463ffffffff1660e01b81526004016105c193929190610b2b565b600060405180830381600087803b1580156105db57600080fd5b505af11580156105ef573d6000803e3d6000fd5b5050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a4576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b81146107ef57600080fd5b50565b600081359050610801816107db565b92915050565b60006020828403121561081d5761081c610741565b5b600061082b848285016107f2565b91505092915050565b61083d81610766565b82525050565b60006020820190506108586000830184610834565b92915050565b600060ff82169050919050565b6108748161085e565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000806000606084860312156108b0576108af610741565b5b60006108be8682870161078f565b93505060206108cf86828701610882565b92505060406108e086828701610882565b9150509250925092565b6000815190506108f9816107db565b92915050565b60006020828403121561091557610914610741565b5b6000610923848285016108ea565b91505092915050565b600081905092915050565b50565b600061094760008361092c565b915061095282610937565b600082019050919050565b60006109688261093a565b9150819050919050565b600082825260208201905092915050565b7f5765623343617264416374697661746f723a6574682d72656c656173652d666160008201527f696c656400000000000000000000000000000000000000000000000000000000602082015250565b60006109df602483610972565b91506109ea82610983565b604082019050919050565b60006020820190508181036000830152610a0e816109d2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4f8261085e565b9150610a5a8361085e565b92508260ff03821115610a7057610a6f610a15565b5b828201905092915050565b7f5765623343617264416374697661746f723a696e73756666696369656e742d6560008201527f7468000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ad7602283610972565b9150610ae282610a7b565b604082019050919050565b60006020820190508181036000830152610b0681610aca565b9050919050565b610b16816107d1565b82525050565b610b258161085e565b82525050565b6000606082019050610b406000830186610b0d565b610b4d6020830185610b1c565b610b5a6040830184610b1c565b94935050505056fea2646970667358221220ac742dc27b762ceb8a52c942120e54d214357cc150ea2909237ee42a6a2740c864736f6c634300080f0033";

type Web3CardActivatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3CardActivatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3CardActivator__factory extends ContractFactory {
  constructor(...args: Web3CardActivatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Web3CardActivator";
  }

  deploy(
    admin: string,
    _erc721KInstance: string,
    _erc721KDesignInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Web3CardActivator> {
    return super.deploy(
      admin,
      _erc721KInstance,
      _erc721KDesignInstance,
      overrides || {}
    ) as Promise<Web3CardActivator>;
  }
  getDeployTransaction(
    admin: string,
    _erc721KInstance: string,
    _erc721KDesignInstance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      admin,
      _erc721KInstance,
      _erc721KDesignInstance,
      overrides || {}
    );
  }
  attach(address: string): Web3CardActivator {
    return super.attach(address) as Web3CardActivator;
  }
  connect(signer: Signer): Web3CardActivator__factory {
    return super.connect(signer) as Web3CardActivator__factory;
  }
  static readonly contractName: "Web3CardActivator";
  public readonly contractName: "Web3CardActivator";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3CardActivatorInterface {
    return new utils.Interface(_abi) as Web3CardActivatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3CardActivator {
    return new Contract(address, _abi, signerOrProvider) as Web3CardActivator;
  }
}
