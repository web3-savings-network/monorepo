/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SVGLibrary, SVGLibraryInterface } from "../SVGLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_colors_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "package",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040527f5fd8cb24549624227a78453feaec1565b8d1f4626577a1d15c0719a34804b4606080908152507fe108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c60a0908152507f790ef67b6749ebf7a55a8aa23a6703c0074d4b3c0bfb6d059ed0e60eda56b19c60c09081525034801561008557600080fd5b5060405161079f38038061079f83398181016040528101906100a79190610150565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061017d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011d826100f2565b9050919050565b61012d81610112565b811461013857600080fd5b50565b60008151905061014a81610124565b92915050565b600060208284031215610166576101656100ed565b5b60006101748482850161013b565b91505092915050565b60805160a05160c0516105f36101ac60003960006102eb0152600061022b0152600061017701526105f36000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e9ae5c5314610030575b600080fd5b61004a6004803603810190610045919061044a565b610060565b6040516100579190610543565b60405180910390f35b6060600073ffffffffffffffffffffffffffffffffffffffff166001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610175576000806001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1685856040516101269291906105a4565b600060405180830381855afa9150503d8060008114610161576040519150601f19603f3d011682016040523d82523d6000602084013e610166565b606091505b5091509150809250505061039e565b7f000000000000000000000000000000000000000000000000000000000000000084036102295760008073__$c6f2003f7d3b61116c8cd05afb053ad2db$__73ffffffffffffffffffffffffffffffffffffffff1685856040516101da9291906105a4565b600060405180830381855afa9150503d8060008114610215576040519150601f19603f3d011682016040523d82523d6000602084013e61021a565b606091505b5091509150809250505061039e565b7f000000000000000000000000000000000000000000000000000000000000000084036102e95760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16858560405161029a9291906105a4565b600060405180830381855afa9150503d80600081146102d5576040519150601f19603f3d011682016040523d82523d6000602084013e6102da565b606091505b5091509150809250505061039e565b7f0000000000000000000000000000000000000000000000000000000000000000840361039d5760008073__$6682988cdc32c33d1c5aaf5f735b12c37e$__73ffffffffffffffffffffffffffffffffffffffff16858560405161034e9291906105a4565b600060405180830381855afa9150503d8060008114610389576040519150601f19603f3d011682016040523d82523d6000602084013e61038e565b606091505b5091509150809250505061039e565b5b9392505050565b600080fd5b600080fd5b6000819050919050565b6103c2816103af565b81146103cd57600080fd5b50565b6000813590506103df816103b9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261040a576104096103e5565b5b8235905067ffffffffffffffff811115610427576104266103ea565b5b602083019150836001820283011115610443576104426103ef565b5b9250929050565b600080600060408486031215610463576104626103a5565b5b6000610471868287016103d0565b935050602084013567ffffffffffffffff811115610492576104916103aa565b5b61049e868287016103f4565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156104e45780820151818401526020810190506104c9565b838111156104f3576000848401525b50505050565b6000601f19601f8301169050919050565b6000610515826104aa565b61051f81856104b5565b935061052f8185602086016104c6565b610538816104f9565b840191505092915050565b6000602082019050818103600083015261055d818461050a565b905092915050565b600081905092915050565b82818337600083830152505050565b600061058b8385610565565b9350610598838584610570565b82840190509392505050565b60006105b182848661057f565b9150819050939250505056fea2646970667358221220a059ca7717c4611c22c530a0667379cc3ad54c3a21993a33ee4979f973e0005164736f6c634300080f0033";

type SVGLibraryConstructorParams =
  | [linkLibraryAddresses: SVGLibraryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SVGLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SVGLibrary__factory extends ContractFactory {
  constructor(...args: SVGLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SVGLibrary__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = "SVGLibrary";
  }

  static linkBytecode(
    linkLibraryAddresses: SVGLibraryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c6f2003f7d3b61116c8cd05afb053ad2db\\$__", "g"),
      linkLibraryAddresses["@erc721k/periphery-sol/contracts/svg/svg.sol:svg"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6682988cdc32c33d1c5aaf5f735b12c37e\\$__", "g"),
      linkLibraryAddresses[
        "@erc721k/periphery-sol/contracts/svg/svgUtils.sol:svgUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _colors_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SVGLibrary> {
    return super.deploy(_colors_, overrides || {}) as Promise<SVGLibrary>;
  }
  getDeployTransaction(
    _colors_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_colors_, overrides || {});
  }
  attach(address: string): SVGLibrary {
    return super.attach(address) as SVGLibrary;
  }
  connect(signer: Signer): SVGLibrary__factory {
    return super.connect(signer) as SVGLibrary__factory;
  }
  static readonly contractName: "SVGLibrary";
  public readonly contractName: "SVGLibrary";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SVGLibraryInterface {
    return new utils.Interface(_abi) as SVGLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SVGLibrary {
    return new Contract(address, _abi, signerOrProvider) as SVGLibrary;
  }
}

export interface SVGLibraryLibraryAddresses {
  ["@erc721k/periphery-sol/contracts/svg/svg.sol:svg"]: string;
  ["@erc721k/periphery-sol/contracts/svg/svgUtils.sol:svgUtils"]: string;
}
