{
  "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ownerCandidate",
          "type": "address"
        }
      ],
      "name": "OwnerUpdateInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "confirmOwner",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721KMinterInstance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getColor",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "colorId",
          "type": "uint8"
        }
      ],
      "name": "getColorFromMap",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getEmoji",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "emojiId",
          "type": "uint8"
        }
      ],
      "name": "getEmojiFromMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwner",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "color",
          "type": "uint8"
        }
      ],
      "name": "setColor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "color",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "emoji",
          "type": "uint8"
        }
      ],
      "name": "setDuringMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc721KMinterInstance",
          "type": "address"
        }
      ],
      "name": "setERC721KMinterInstance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "emoji",
          "type": "uint8"
        }
      ],
      "name": "setEmoji",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_styleUpgradeCost",
          "type": "uint256"
        }
      ],
      "name": "setStyleUpgradeCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd6a508187b240019f7420322a7c3c0f01f6ceca1f04b583ba2812c9a2347b656",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
    "transactionIndex": 0,
    "gasUsed": "2461103",
    "logsBloom": "0x
    "blockHash": "0x1a713af225f7c0d7ba211479b62aaf472f5a5740afd8a8a8a956339141bb0dbb",
    "transactionHash": "0xd6a508187b240019f7420322a7c3c0f01f6ceca1f04b583ba2812c9a2347b656",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 33969403,
        "transactionHash": "0xd6a508187b240019f7420322a7c3c0f01f6ceca1f04b583ba2812c9a2347b656",
        "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1a713af225f7c0d7ba211479b62aaf472f5a5740afd8a8a8a956339141bb0dbb"
      }
    ],
    "blockNumber": 33969403,
    "cumulativeGasUsed": "2461103",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "ec25c1383404eb224f2720283852d948",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerCandidate\",\"type\":\"address\"}],\"name\":\"OwnerUpdateInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721KMinterInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getColor\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"colorId\",\"type\":\"uint8\"}],\"name\":\"getColorFromMap\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getEmoji\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"emojiId\",\"type\":\"uint8\"}],\"name\":\"getEmojiFromMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"color\",\"type\":\"uint8\"}],\"name\":\"setColor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"color\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"emoji\",\"type\":\"uint8\"}],\"name\":\"setDuringMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721KMinterInstance\",\"type\":\"address\"}],\"name\":\"setERC721KMinterInstance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"emoji\",\"type\":\"uint8\"}],\"name\":\"setEmoji\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_styleUpgradeCost\",\"type\":\"uint256\"}],\"name\":\"setStyleUpgradeCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"The `_ownerCandidate` that will `confirmOwner()`.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Unauthorized()\":[{\"notice\":\"----------------------------------------------------------------------- Custom Errors -----------------------------------------------------------------------\"}]},\"events\":{\"OwnerUpdateInitiated(address,address)\":{\"notice\":\"----------------------------------------------------------------------- Events -----------------------------------------------------------------------\"}},\"kind\":\"user\",\"methods\":{\"confirmOwner()\":{\"notice\":\"Confirm ownership between `owner` and `_ownerCandidate`.\"},\"owner()\":{\"notice\":\"----------------------------------------------------------------------- Ownership Storage -----------------------------------------------------------------------\"},\"renounceOwner()\":{\"notice\":\"Terminate ownership by `owner`.\"},\"transferOwnership(address)\":{\"notice\":\"Initiate ownership transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol\":\"Web3CardDesign\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@turbo-eth/solbase-sol/src/auth/OwnedThreeStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Three-step single owner authorization mixin.\\n/// @author SolBase (https://github.com/Sol-DAO/solbase/blob/main/src/auth/OwnedThreeStep.sol)\\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract OwnedThreeStep {\\n    /// -----------------------------------------------------------------------\\n    /// Events\\n    /// -----------------------------------------------------------------------\\n\\n    event OwnerUpdateInitiated(address indexed user, address indexed ownerCandidate);\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /// -----------------------------------------------------------------------\\n    /// Custom Errors\\n    /// -----------------------------------------------------------------------\\n\\n    error Unauthorized();\\n\\n    /// -----------------------------------------------------------------------\\n    /// Ownership Storage\\n    /// -----------------------------------------------------------------------\\n\\n    address public owner;\\n\\n    address internal _ownerCandidate;\\n\\n    bool internal _ownerCandidateConfirmed;\\n\\n    modifier onlyOwner() virtual {\\n        if (msg.sender != owner) revert Unauthorized();\\n\\n        _;\\n    }\\n\\n    /// -----------------------------------------------------------------------\\n    /// Constructor\\n    /// -----------------------------------------------------------------------\\n\\n    /// @notice Create contract and set `owner`.\\n    /// @param _owner The `owner` of contract.\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /// -----------------------------------------------------------------------\\n    /// Ownership Logic\\n    /// -----------------------------------------------------------------------\\n\\n    /// @notice Initiate ownership transfer.\\n    /// @param newOwner The `_ownerCandidate` that will `confirmOwner()`.\\n    function transferOwnership(address newOwner) public payable virtual onlyOwner {\\n        _ownerCandidate = newOwner;\\n\\n        emit OwnerUpdateInitiated(msg.sender, newOwner);\\n    }\\n\\n    /// @notice Confirm ownership between `owner` and `_ownerCandidate`.\\n    function confirmOwner() public payable virtual {\\n        if (_ownerCandidateConfirmed) {\\n            if (msg.sender != owner) revert Unauthorized();\\n\\n            delete _ownerCandidateConfirmed;\\n\\n            address newOwner = _ownerCandidate;\\n\\n            owner = newOwner;\\n\\n            emit OwnershipTransferred(msg.sender, newOwner);\\n        } else {\\n            if (msg.sender != _ownerCandidate) revert Unauthorized();\\n\\n            _ownerCandidateConfirmed = true;\\n        }\\n    }\\n\\n    /// @notice Terminate ownership by `owner`.\\n    function renounceOwner() public payable virtual onlyOwner {\\n        delete owner;\\n\\n        emit OwnershipTransferred(msg.sender, address(0));\\n    }\\n}\\n\",\"keccak256\":\"0x2a10ba15d4033be6dbe7ae30fbc5c8bf09fdf84a563128b3aefc788d042b9885\",\"license\":\"MIT\"},\"@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport { IERC721 } from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport { OwnedThreeStep } from \\\"@turbo-eth/solbase-sol/src/auth/OwnedThreeStep.sol\\\";\\n\\ncontract Web3CardDesign is OwnedThreeStep {\\n  address public erc721KMinterInstance;\\n\\n  uint256 private STYLE_UPGRADE_COST = 0.01 ether;\\n\\n  mapping(uint256 => uint8) private _color;\\n  mapping(uint256 => uint8) private _emoji;\\n\\n  mapping(uint8 => bytes) private _colorMap;\\n  mapping(uint8 => string) private _emojiMap;\\n\\n  mapping(address => bool) private _supporter;\\n\\n  /* ===================================================================================== */\\n  /* Constructor & Modifiers                                                               */\\n  /* ===================================================================================== */\\n\\n  constructor(address _owner) OwnedThreeStep(_owner) {\\n    _colorMap[0] = hex\\\"5B1FA8\\\"; // Purple\\n    _colorMap[1] = hex\\\"292929\\\"; // Black\\n    _colorMap[2] = hex\\\"782E1B\\\"; // Red\\n    _colorMap[3] = hex\\\"1F387A\\\"; // Blue\\n\\n    _emojiMap[0] = unicode\\\"\\ud83c\\udfe6\\\";\\n    _emojiMap[1] = unicode\\\"\\ud83d\\udd25\\\";\\n    _emojiMap[2] = unicode\\\"\\ud83c\\udf1f\\\";\\n    _emojiMap[3] = unicode\\\"\\ud83d\\ude80\\\";\\n    _emojiMap[4] = unicode\\\"\\ud83d\\udc51\\\";\\n    _emojiMap[5] = unicode\\\"\\ud83d\\udd2e\\\";\\n    _emojiMap[6] = unicode\\\"\\ud83c\\udf08\\\";\\n    _emojiMap[7] = unicode\\\"\\ud83c\\udf89\\\";\\n    _emojiMap[8] = unicode\\\"\\ud83c\\udf81\\\";\\n    _emojiMap[9] = unicode\\\"\\ud83c\\udfb2\\\";\\n    _emojiMap[10] = unicode\\\"\\ud83c\\udfb0\\\";\\n    _emojiMap[11] = unicode\\\"\\ud83c\\udfae\\\";\\n    _emojiMap[12] = unicode\\\"\\ud83c\\udfb3\\\";\\n    _emojiMap[13] = unicode\\\"\\ud83c\\udfb8\\\";\\n    _emojiMap[14] = unicode\\\"\\ud83c\\udfb9\\\";\\n    _emojiMap[15] = unicode\\\"\\ud83c\\udfbc\\\";\\n    _emojiMap[16] = unicode\\\"\\ud83c\\udfc0\\\";\\n    _emojiMap[17] = unicode\\\"\\ud83c\\udfc8\\\";\\n    _emojiMap[19] = unicode\\\"\\ud83c\\udfca\\\";\\n    _emojiMap[20] = unicode\\\"\\ud83c\\udfc6\\\";\\n    _emojiMap[21] = unicode\\\"\\ud83c\\udfd3\\\";\\n    _emojiMap[22] = unicode\\\"\\ud83c\\udfd4\\\";\\n    _emojiMap[23] = unicode\\\"\\ud83c\\udfd5\\\";\\n    _emojiMap[24] = unicode\\\"\\ud83c\\udfd6\\\";\\n    _emojiMap[25] = unicode\\\"\\ud83c\\udfd7\\\";\\n    _emojiMap[26] = unicode\\\"\\ud83c\\udfd8\\\";\\n    _emojiMap[27] = unicode\\\"\\ud83c\\udfd9\\\";\\n    _emojiMap[28] = unicode\\\"\\ud83c\\udfda\\\";\\n    _emojiMap[29] = unicode\\\"\\ud83c\\udfdb\\\";\\n    _emojiMap[30] = unicode\\\"\\ud83c\\udfdc\\\";\\n    _emojiMap[31] = unicode\\\"\\ud83c\\udfdd\\\";\\n    _emojiMap[32] = unicode\\\"\\ud83c\\udfde\\\";\\n    _emojiMap[33] = unicode\\\"\\ud83e\\udd9c\\\";\\n    _emojiMap[35] = unicode\\\"\\ud83e\\udd8a\\\";\\n    _emojiMap[36] = unicode\\\"\\ud83e\\udd8b\\\";\\n    _emojiMap[37] = unicode\\\"\\ud83e\\udd8c\\\";\\n    _emojiMap[38] = unicode\\\"\\ud83e\\udd8d\\\";\\n    _emojiMap[39] = unicode\\\"\\ud83e\\udd8e\\\";\\n    _emojiMap[40] = unicode\\\"\\ud83e\\udd8f\\\";\\n    _emojiMap[41] = unicode\\\"\\ud83e\\udd90\\\";\\n    _emojiMap[42] = unicode\\\"\\ud83e\\udd91\\\";\\n  }\\n\\n  /* ===================================================================================== */\\n  /* External Functions                                                                    */\\n  /* ===================================================================================== */\\n\\n  function getEmoji(uint256 tokenId) external view returns (string memory) {\\n    return _emojiMap[_emoji[tokenId]];\\n  }\\n\\n  function getColor(uint256 tokenId) external view returns (bytes memory) {\\n    return _colorMap[_color[tokenId]];\\n  }\\n\\n  function getEmojiFromMap(uint8 emojiId) external view returns (string memory) {\\n    return _emojiMap[emojiId];\\n  }\\n\\n  function getColorFromMap(uint8 colorId) external view returns (bytes memory) {\\n    return _colorMap[colorId];\\n  }\\n\\n  function setDuringMint(\\n    uint256 tokenId,\\n    uint8 color,\\n    uint8 emoji\\n  ) external {\\n    require(msg.sender == erc721KMinterInstance, \\\"Web3CardDesign:not-authorized\\\");\\n    _color[tokenId] = color;\\n    _emoji[tokenId] = emoji;\\n  }\\n\\n  function setEmoji(uint256 tokenId, uint8 emoji) external payable {\\n    require(msg.value >= STYLE_UPGRADE_COST, \\\"Web3CardDesign:insufficient-eth\\\");\\n    require(\\n      msg.sender == IERC721(erc721KMinterInstance).ownerOf(tokenId),\\n      \\\"Web3CardDesign:not-owner\\\"\\n    );\\n    _emoji[tokenId] = emoji;\\n    _release(msg.value);\\n  }\\n\\n  function setColor(uint256 tokenId, uint8 color) external payable {\\n    require(msg.value >= STYLE_UPGRADE_COST, \\\"Web3CardDesign:insufficient-eth\\\");\\n    require(\\n      msg.sender == IERC721(erc721KMinterInstance).ownerOf(tokenId),\\n      \\\"Web3CardDesign:not-owner\\\"\\n    );\\n    _color[tokenId] = color;\\n    _release(msg.value);\\n  }\\n\\n  function setERC721KMinterInstance(address _erc721KMinterInstance) external onlyOwner {\\n    erc721KMinterInstance = _erc721KMinterInstance;\\n  }\\n\\n  function setStyleUpgradeCost(uint256 _styleUpgradeCost) external onlyOwner {\\n    STYLE_UPGRADE_COST = _styleUpgradeCost;\\n  }\\n\\n  function _release(uint256 amount) internal {\\n    (bool _success, ) = erc721KMinterInstance.call{ value: amount }(\\\"\\\");\\n    require(_success, \\\"Web3CardDesign:release-failed\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xa4e522fc66435a4b22f2a277876ab273808e82e058d14abca1ab32dd67bed27f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c806396cfdda81161007f578063bd9b6d8611610059578063bd9b6d8614610283578063be7d97b31461028d578063e4afc6fe146102ca578063f2fde38b146102f3576100dd565b806396cfdda8146101ed5780639f571e0b14610209578063a96cc2f914610246576100dd565b8063381d5910116100bb578063381d59101461013e57806363ff13681461016957806380057b9a146101855780638da5cb5b146101c2576100dd565b80630cd5391e146100e257806325eb50731461010b57806328c23a4514610134575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061111e565b61030f565b005b34801561011757600080fd5b50610132600480360381019061012d9190611171565b6103fc565b005b61013c61048b565b005b34801561014a57600080fd5b50610153610591565b60405161016091906111df565b60405180910390f35b610183600480360381019061017e91906111fa565b6105b7565b005b34801561019157600080fd5b506101ac60048036038101906101a79190611171565b61073e565b6040516101b991906112d3565b60405180910390f35b3480156101ce57600080fd5b506101d7610809565b6040516101e491906111df565b60405180910390f35b610207600480360381019061020291906111fa565b61082d565b005b34801561021557600080fd5b50610230600480360381019061022b91906112f5565b6109b4565b60405161023d91906112d3565b60405180910390f35b34801561025257600080fd5b5061026d600480360381019061026891906112f5565b610a5f565b60405161027a9190611377565b60405180910390f35b61028b610b0a565b005b34801561029957600080fd5b506102b460048036038101906102af9190611171565b610d21565b6040516102c19190611377565b60405180910390f35b3480156102d657600080fd5b506102f160048036038101906102ec91906113c5565b610dec565b005b61030d600480360381019061030891906113c5565b610eb5565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103969061143e565b60405180910390fd5b816004600085815260200190815260200160002060006101000a81548160ff021916908360ff160217905550806005600085815260200190815260200160002060006101000a81548160ff021916908360ff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610481576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060038190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610510576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003543410156105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f3906114aa565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161065791906114d9565b602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190611509565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc90611582565b60405180910390fd5b806004600084815260200190815260200160002060006101000a81548160ff021916908360ff16021790555061073a34610fd8565b5050565b6060600660006004600085815260200190815260200160002060009054906101000a900460ff1660ff1660ff1681526020019081526020016000208054610784906115d1565b80601f01602080910402602001604051908101604052809291908181526020018280546107b0906115d1565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600354341015610872576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610869906114aa565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016108cd91906114d9565b602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190611509565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290611582565b60405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506109b034610fd8565b5050565b6060600660008360ff1660ff16815260200190815260200160002080546109da906115d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a06906115d1565b8015610a535780601f10610a2857610100808354040283529160200191610a53565b820191906000526020600020905b815481529060010190602001808311610a3657829003601f168201915b50505050509050919050565b6060600760008360ff1660ff1681526020019081526020016000208054610a85906115d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab1906115d1565b8015610afe5780601f10610ad357610100808354040283529160200191610afe565b820191906000526020600020905b815481529060010190602001808311610ae157829003601f168201915b50505050509050919050565b600160149054906101000a900460ff1615610c7d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba4576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160146101000a81549060ff02191690556000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350610d1f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d04576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060146101000a81548160ff0219169083151502179055505b565b6060600760006005600085815260200190815260200160002060009054906101000a900460ff1660ff1660ff1681526020019081526020016000208054610d67906115d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d93906115d1565b8015610de05780601f10610db557610100808354040283529160200191610de0565b820191906000526020600020905b815481529060010190602001808311610dc357829003601f168201915b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e71576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f365e8eca24e61548e99db9d948e4f9cf79224bcbf4fc81afe651e6e80921c87560405160405180910390a350565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161102090611633565b60006040518083038185875af1925050503d806000811461105d576040519150601f19603f3d011682016040523d82523d6000602084013e611062565b606091505b50509050806110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d90611694565b60405180910390fd5b5050565b600080fd5b6000819050919050565b6110c2816110af565b81146110cd57600080fd5b50565b6000813590506110df816110b9565b92915050565b600060ff82169050919050565b6110fb816110e5565b811461110657600080fd5b50565b600081359050611118816110f2565b92915050565b600080600060608486031215611137576111366110aa565b5b6000611145868287016110d0565b935050602061115686828701611109565b925050604061116786828701611109565b9150509250925092565b600060208284031215611187576111866110aa565b5b6000611195848285016110d0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c98261119e565b9050919050565b6111d9816111be565b82525050565b60006020820190506111f460008301846111d0565b92915050565b60008060408385031215611211576112106110aa565b5b600061121f858286016110d0565b925050602061123085828601611109565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611274578082015181840152602081019050611259565b83811115611283576000848401525b50505050565b6000601f19601f8301169050919050565b60006112a58261123a565b6112af8185611245565b93506112bf818560208601611256565b6112c881611289565b840191505092915050565b600060208201905081810360008301526112ed818461129a565b905092915050565b60006020828403121561130b5761130a6110aa565b5b600061131984828501611109565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061134982611322565b611353818561132d565b9350611363818560208601611256565b61136c81611289565b840191505092915050565b60006020820190508181036000830152611391818461133e565b905092915050565b6113a2816111be565b81146113ad57600080fd5b50565b6000813590506113bf81611399565b92915050565b6000602082840312156113db576113da6110aa565b5b60006113e9848285016113b0565b91505092915050565b7f576562334361726444657369676e3a6e6f742d617574686f72697a6564000000600082015250565b6000611428601d8361132d565b9150611433826113f2565b602082019050919050565b600060208201905081810360008301526114578161141b565b9050919050565b7f576562334361726444657369676e3a696e73756666696369656e742d65746800600082015250565b6000611494601f8361132d565b915061149f8261145e565b602082019050919050565b600060208201905081810360008301526114c381611487565b9050919050565b6114d3816110af565b82525050565b60006020820190506114ee60008301846114ca565b92915050565b60008151905061150381611399565b92915050565b60006020828403121561151f5761151e6110aa565b5b600061152d848285016114f4565b91505092915050565b7f576562334361726444657369676e3a6e6f742d6f776e65720000000000000000600082015250565b600061156c60188361132d565b915061157782611536565b602082019050919050565b6000602082019050818103600083015261159b8161155f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115e957607f821691505b6020821081036115fc576115fb6115a2565b5b50919050565b600081905092915050565b50565b600061161d600083611602565b91506116288261160d565b600082019050919050565b600061163e82611610565b9150819050919050565b7f576562334361726444657369676e3a72656c656173652d6661696c6564000000600082015250565b600061167e601d8361132d565b915061168982611648565b602082019050919050565b600060208201905081810360008301526116ad81611671565b905091905056fea264697066735822122044e233b5fbc6c7bcb8ba969ca4b8620d2b8de09fa25457c4dc8401d4c868390964736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "params": {
          "newOwner": "The `_ownerCandidate` that will `confirmOwner()`."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "Unauthorized()": [
        {
          "notice": "----------------------------------------------------------------------- Custom Errors -----------------------------------------------------------------------"
        }
      ]
    },
    "events": {
      "OwnerUpdateInitiated(address,address)": {
        "notice": "----------------------------------------------------------------------- Events -----------------------------------------------------------------------"
      }
    },
    "kind": "user",
    "methods": {
      "confirmOwner()": {
        "notice": "Confirm ownership between `owner` and `_ownerCandidate`."
      },
      "owner()": {
        "notice": "----------------------------------------------------------------------- Ownership Storage -----------------------------------------------------------------------"
      },
      "renounceOwner()": {
        "notice": "Terminate ownership by `owner`."
      },
      "transferOwnership(address)": {
        "notice": "Initiate ownership transfer."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6573,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6575,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_ownerCandidate",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6577,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_ownerCandidateConfirmed",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 8689,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "erc721KMinterInstance",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 8692,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "STYLE_UPGRADE_COST",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 8696,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_color",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint8)"
      },
      {
        "astId": 8700,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_emoji",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint8)"
      },
      {
        "astId": 8704,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_colorMap",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint8,t_bytes_storage)"
      },
      {
        "astId": 8708,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_emojiMap",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint8,t_string_storage)"
      },
      {
        "astId": 8712,
        "contract": "@web3-savings-cards/core-sol/contracts/Web3CardDesign.sol:Web3CardDesign",
        "label": "_supporter",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_mapping(t_uint8,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint8,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}